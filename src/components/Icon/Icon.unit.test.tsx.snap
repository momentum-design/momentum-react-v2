// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Icon /> snapshot should match snapshot 1`] = `
<Icon
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with aria-label 1`] = `
<Icon
  aria-label="This participant is muted"
  name="draft-indicator"
  weight="bold"
>
  <div
    aria-hidden="false"
    aria-label="This participant is muted"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="draft-indicator"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with ariaLabel 1`] = `
<Icon
  ariaLabel="This participant is muted"
  name="draft-indicator"
  weight="bold"
>
  <div
    aria-hidden="false"
    aria-label="This participant is muted"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="draft-indicator"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with autoScale set to 'true' 1`] = `
<Icon
  autoScale={true}
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={true}
      data-scale={false}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with autoScale set to a percentage value 1`] = `
<Icon
  autoScale={150}
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={150}
      data-scale={false}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with className 1`] = `
<Icon
  className="example-class"
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales example-class"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with color 1`] = `
<Icon
  color="red"
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      height="100%"
      style={
        Object {
          "fill": "red",
          "stroke": "red",
        }
      }
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with fillColor 1`] = `
<Icon
  fillColor="red"
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      height="100%"
      style={
        Object {
          "fill": "red",
        }
      }
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with id 1`] = `
<Icon
  id="example-id"
  name="accessibility"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    id="example-id"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with invalid name 1`] = `
<Icon
  name="invalid_icon_name"
>
  <div
    className="md-icon-wrapper"
  >
    <div
      className="md-icon-not-found"
      data-autoscale={false}
      data-scale={32}
    >
      âƒž
    </div>
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with scale 1`] = `
<Icon
  name="accessibility"
  scale={16}
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={16}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with small icons 1`] = `
<Icon
  name="info-badge"
  scale={14}
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={14}
      data-test="info-badge"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 14, 14"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with strokeColor 1`] = `
<Icon
  name="accessibility"
  strokeColor="red"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={
        Object {
          "stroke": "red",
        }
      }
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with style 1`] = `
<Icon
  name="accessibility"
  style={
    Object {
      "color": "pink",
    }
  }
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
    style={
      Object {
        "color": "pink",
      }
    }
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with title 1`] = `
<Icon
  name="draft-indicator"
  title="You have a draft message"
  weight="bold"
>
  <div
    aria-hidden="false"
    aria-label="You have a draft message"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
    title="You have a draft message"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="draft-indicator"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with tooltip (children and placement) 1`] = `
<Icon
  name="accessibility"
  tooltipProps={
    Object {
      "children": "Test",
      "placement": "bottom",
    }
  }
>
  <Tooltip
    placement="bottom"
    strategy="fixed"
    triggerComponent={
      <div
        aria-hidden="false"
        className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
        role="img"
        tabIndex={0}
      >
        <svg
          aria-hidden="true"
          className=""
          data-autoscale={false}
          data-scale={32}
          data-test="accessibility"
          fill="currentColor"
          height="100%"
          style={Object {}}
          viewBox="0, 0, 32, 32"
          width="100%"
        />
      </div>
    }
    type="label"
  >
    <Popover
      addBackdrop={false}
      aria-hidden={false}
      boundary="scrollParent"
      color="primary"
      interactive={false}
      offsetDistance={5}
      offsetSkidding={0}
      placement="bottom"
      role="tooltip"
      setInstance={[Function]}
      showArrow={true}
      strategy="fixed"
      trigger="mouseenter focus"
      triggerComponent={
        <div
          aria-hidden="false"
          aria-labelledby="test-ID"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
          role="img"
          tabIndex={0}
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={32}
            data-test="accessibility"
            fill="currentColor"
            height="100%"
            style={Object {}}
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      }
      variant="small"
    >
      <LazyTippy
        animation={false}
        appendTo="parent"
        hideOnClick={true}
        interactive={false}
        offset={
          Array [
            0,
            17,
          ]
        }
        onHidden={[Function]}
        placement="bottom"
        plugins={
          Array [
            Object {
              "defaultValue": true,
              "fn": [Function],
              "name": "hideOnEsc",
            },
          ]
        }
        popperOptions={
          Object {
            "modifiers": Array [
              Object {
                "enabled": true,
                "name": "arrow",
                "options": Object {
                  "element": "#arrow95828b76-fd96-4a6f-b781-3469b7925ca5",
                  "padding": 5,
                },
              },
              Object {
                "name": "preventOverflow",
                "options": Object {
                  "altAxis": true,
                  "boundariesElement": "scrollParent",
                  "padding": 8,
                },
              },
            ],
            "strategy": "fixed",
          }
        }
        render={[Function]}
        setInstance={[Function]}
        trigger="mouseenter focus"
      >
        <ForwardRef(TippyWrapper)
          animation={false}
          appendTo="parent"
          hideOnClick={true}
          interactive={false}
          offset={
            Array [
              0,
              17,
            ]
          }
          onHidden={[Function]}
          placement="bottom"
          plugins={
            Array [
              Object {
                "fn": [Function],
              },
              Object {
                "fn": [Function],
              },
              Object {
                "fn": [Function],
              },
              Object {
                "defaultValue": true,
                "fn": [Function],
                "name": "hideOnEsc",
              },
            ]
          }
          popperOptions={
            Object {
              "modifiers": Array [
                Object {
                  "enabled": true,
                  "name": "arrow",
                  "options": Object {
                    "element": "#arrow95828b76-fd96-4a6f-b781-3469b7925ca5",
                    "padding": 5,
                  },
                },
                Object {
                  "name": "preventOverflow",
                  "options": Object {
                    "altAxis": true,
                    "boundariesElement": "scrollParent",
                    "padding": 8,
                  },
                },
              ],
              "strategy": "fixed",
            }
          }
          render={[Function]}
          trigger="mouseenter focus"
        >
          <Tippy
            animation={false}
            appendTo="parent"
            hideOnClick={true}
            interactive={false}
            offset={
              Array [
                0,
                17,
              ]
            }
            onHidden={[Function]}
            placement="bottom"
            plugins={
              Array [
                Object {
                  "fn": [Function],
                },
                Object {
                  "fn": [Function],
                },
                Object {
                  "fn": [Function],
                },
                Object {
                  "defaultValue": true,
                  "fn": [Function],
                  "name": "hideOnEsc",
                },
              ]
            }
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": true,
                    "name": "arrow",
                    "options": Object {
                      "element": "#arrow95828b76-fd96-4a6f-b781-3469b7925ca5",
                      "padding": 5,
                    },
                  },
                  Object {
                    "name": "preventOverflow",
                    "options": Object {
                      "altAxis": true,
                      "boundariesElement": "scrollParent",
                      "padding": 8,
                    },
                  },
                ],
                "strategy": "fixed",
              }
            }
            render={[Function]}
            trigger="mouseenter focus"
          >
            <div
              aria-hidden="false"
              aria-labelledby="test-ID"
              className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
              role="img"
              tabIndex={0}
            >
              <svg
                aria-hidden="true"
                className=""
                data-autoscale={false}
                data-scale={32}
                data-test="accessibility"
                fill="currentColor"
                height="100%"
                style={Object {}}
                viewBox="0, 0, 32, 32"
                width="100%"
              />
            </div>
            <Portal
              containerInfo={
                <div
                  data-tippy-root=""
                  id="tippy-2"
                  style="pointer-events: none; z-index: 9999;"
                >
                  
                </div>
              }
            />
          </Tippy>
        </ForwardRef(TippyWrapper)>
      </LazyTippy>
    </Popover>
    <div
      className="md-tooltip-label"
      id="test-ID"
    >
      Test
    </div>
  </Tooltip>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with tooltip (children) 1`] = `
<Icon
  name="accessibility"
  tooltipProps={
    Object {
      "children": "Test",
    }
  }
>
  <Tooltip
    placement="top"
    strategy="fixed"
    triggerComponent={
      <div
        aria-hidden="false"
        className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
        role="img"
        tabIndex={0}
      >
        <svg
          aria-hidden="true"
          className=""
          data-autoscale={false}
          data-scale={32}
          data-test="accessibility"
          fill="currentColor"
          height="100%"
          style={Object {}}
          viewBox="0, 0, 32, 32"
          width="100%"
        />
      </div>
    }
    type="label"
  >
    <Popover
      addBackdrop={false}
      aria-hidden={false}
      boundary="scrollParent"
      color="primary"
      interactive={false}
      offsetDistance={5}
      offsetSkidding={0}
      placement="top"
      role="tooltip"
      setInstance={[Function]}
      showArrow={true}
      strategy="fixed"
      trigger="mouseenter focus"
      triggerComponent={
        <div
          aria-hidden="false"
          aria-labelledby="test-ID"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
          role="img"
          tabIndex={0}
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={32}
            data-test="accessibility"
            fill="currentColor"
            height="100%"
            style={Object {}}
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      }
      variant="small"
    >
      <LazyTippy
        animation={false}
        appendTo="parent"
        hideOnClick={true}
        interactive={false}
        offset={
          Array [
            0,
            17,
          ]
        }
        onHidden={[Function]}
        placement="top"
        plugins={
          Array [
            Object {
              "defaultValue": true,
              "fn": [Function],
              "name": "hideOnEsc",
            },
          ]
        }
        popperOptions={
          Object {
            "modifiers": Array [
              Object {
                "enabled": true,
                "name": "arrow",
                "options": Object {
                  "element": "#arrow42dd5e55-398c-4d19-bf7d-e7a77cd5f785",
                  "padding": 5,
                },
              },
              Object {
                "name": "preventOverflow",
                "options": Object {
                  "altAxis": true,
                  "boundariesElement": "scrollParent",
                  "padding": 8,
                },
              },
            ],
            "strategy": "fixed",
          }
        }
        render={[Function]}
        setInstance={[Function]}
        trigger="mouseenter focus"
      >
        <ForwardRef(TippyWrapper)
          animation={false}
          appendTo="parent"
          hideOnClick={true}
          interactive={false}
          offset={
            Array [
              0,
              17,
            ]
          }
          onHidden={[Function]}
          placement="top"
          plugins={
            Array [
              Object {
                "fn": [Function],
              },
              Object {
                "fn": [Function],
              },
              Object {
                "fn": [Function],
              },
              Object {
                "defaultValue": true,
                "fn": [Function],
                "name": "hideOnEsc",
              },
            ]
          }
          popperOptions={
            Object {
              "modifiers": Array [
                Object {
                  "enabled": true,
                  "name": "arrow",
                  "options": Object {
                    "element": "#arrow42dd5e55-398c-4d19-bf7d-e7a77cd5f785",
                    "padding": 5,
                  },
                },
                Object {
                  "name": "preventOverflow",
                  "options": Object {
                    "altAxis": true,
                    "boundariesElement": "scrollParent",
                    "padding": 8,
                  },
                },
              ],
              "strategy": "fixed",
            }
          }
          render={[Function]}
          trigger="mouseenter focus"
        >
          <Tippy
            animation={false}
            appendTo="parent"
            hideOnClick={true}
            interactive={false}
            offset={
              Array [
                0,
                17,
              ]
            }
            onHidden={[Function]}
            placement="top"
            plugins={
              Array [
                Object {
                  "fn": [Function],
                },
                Object {
                  "fn": [Function],
                },
                Object {
                  "fn": [Function],
                },
                Object {
                  "defaultValue": true,
                  "fn": [Function],
                  "name": "hideOnEsc",
                },
              ]
            }
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": true,
                    "name": "arrow",
                    "options": Object {
                      "element": "#arrow42dd5e55-398c-4d19-bf7d-e7a77cd5f785",
                      "padding": 5,
                    },
                  },
                  Object {
                    "name": "preventOverflow",
                    "options": Object {
                      "altAxis": true,
                      "boundariesElement": "scrollParent",
                      "padding": 8,
                    },
                  },
                ],
                "strategy": "fixed",
              }
            }
            render={[Function]}
            trigger="mouseenter focus"
          >
            <div
              aria-hidden="false"
              aria-labelledby="test-ID"
              className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
              role="img"
              tabIndex={0}
            >
              <svg
                aria-hidden="true"
                className=""
                data-autoscale={false}
                data-scale={32}
                data-test="accessibility"
                fill="currentColor"
                height="100%"
                style={Object {}}
                viewBox="0, 0, 32, 32"
                width="100%"
              />
            </div>
            <Portal
              containerInfo={
                <div
                  data-tippy-root=""
                  id="tippy-1"
                  style="pointer-events: none; z-index: 9999;"
                >
                  
                </div>
              }
            />
          </Tippy>
        </ForwardRef(TippyWrapper)>
      </LazyTippy>
    </Popover>
    <div
      className="md-tooltip-label"
      id="test-ID"
    >
      Test
    </div>
  </Tooltip>
</Icon>
`;

exports[`<Icon /> snapshot should match snapshot with weight 1`] = `
<Icon
  name="accessibility"
  weight="light"
>
  <div
    aria-hidden="true"
    className="md-icon-wrapper md-icon-auto-scales md-icon-scales"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-autoscale={false}
      data-scale={32}
      data-test="accessibility"
      fill="currentColor"
      height="100%"
      style={Object {}}
      viewBox="0, 0, 32, 32"
      width="100%"
    />
  </div>
</Icon>
`;
