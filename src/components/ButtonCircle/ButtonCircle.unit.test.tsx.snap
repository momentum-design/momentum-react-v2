// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonCircle /> snapshot should match snapshot 1`] = `
<ButtonCircle>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        />
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot when a ghost 1`] = `
<ButtonCircle
  ghost={true}
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={true}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={true}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot when a ghost and disabled 1`] = `
<ButtonCircle
  disabled={true}
  ghost={true}
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={true}
    data-ghost={true}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    disabled={true}
    isDisabled={true}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing
      disabled={true}
    >
      <FocusRing
        disabled={true}
        focusClass="md-focus-ring-wrapper-disabled"
        focusRingClass="md-focus-ring-wrapper-disabled"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={true}
          data-ghost={true}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot when disabled 1`] = `
<ButtonCircle
  disabled={true}
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={true}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    disabled={true}
    isDisabled={true}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing
      disabled={true}
    >
      <FocusRing
        disabled={true}
        focusClass="md-focus-ring-wrapper-disabled"
        focusRingClass="md-focus-ring-wrapper-disabled"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={true}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          disabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot when is outline 1`] = `
<ButtonCircle
  outline={true}
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={true}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={true}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot when is selected 1`] = `
<ButtonCircle
  isSelected={true}
>
  <ButtonSimple
    aria-pressed={true}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={true}
    data-size={40}
    isSelected={true}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={true}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={true}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with className 1`] = `
<ButtonCircle
  className="example-class"
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper example-class"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper example-class md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        />
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with color 1`] = `
<ButtonCircle
  color="message"
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="message"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="message"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with id 1`] = `
<ButtonCircle
  id="example-id"
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    id="example-id"
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          id="example-id"
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        />
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with multiple children 1`] = `
<ButtonCircle>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={true}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={true}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <div>
            X
          </div>
          <div>
            Y
          </div>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with size 1`] = `
<ButtonCircle
  size={64}
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={64}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={64}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <span>
            X
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with style 1`] = `
<ButtonCircle
  style={
    Object {
      "color": "pink",
    }
  }
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "color": "pink",
      }
    }
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "color": "pink",
            }
          }
          type="button"
        />
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;

exports[`<ButtonCircle /> snapshot should match snapshot with title 1`] = `
<ButtonCircle
  title="Example Text"
>
  <ButtonSimple
    aria-pressed={false}
    className="md-button-circle-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-multiple-children={false}
    data-outline={false}
    data-selected={false}
    data-size={40}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    title="Example Text"
    type="button"
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          aria-pressed={false}
          className="md-button-circle-wrapper md-button-simple-wrapper"
          data-color="primary"
          data-disabled={false}
          data-ghost={false}
          data-multiple-children={false}
          data-outline={false}
          data-selected={false}
          data-size={40}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Example Text"
          type="button"
        />
      </FocusRing>
    </FocusRing>
  </ButtonSimple>
</ButtonCircle>
`;
