// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextInput/> snapshot should match snapshot 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    label="text-input"
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with className 1`] = `
<SSRProvider>
  <TextInput
    className="example-class"
    clearAriaLabel="Clear this input"
    label="text-input"
  >
    <div
      className="md-text-input-wrapper example-class"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with clearAriaLabel 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    id="example-id"
    label="Password"
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="example-id"
        id="desc-test-ID"
      >
        Password
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="example-id"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="example-id"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with description 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    description="some input"
    label="text-input"
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <InputMessage
        className="md-text-input-help"
        id={null}
        level="help"
        message="some input"
      >
        <div
          className="md-input-message-wrapper md-text-input-help"
          id={null}
        >
          <div
            className="md-input-message-message"
            message-level="help"
          >
            <Text
              className="md-input-message--text"
              tagName="small"
              type="body-secondary"
            >
              <Text
                className="md-text-wrapper md-input-message--text"
                tagname="small"
                type="body-midsize-regular"
              >
                <mdc-text
                  class="md-text-wrapper md-input-message--text"
                  suppressHydrationWarning={true}
                >
                  some input
                </mdc-text>
              </Text>
            </Text>
          </div>
        </div>
      </InputMessage>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with error text 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    label="text-input"
    messageArr={
      Array [
        Object {
          "level": "error",
          "message": "test",
        },
      ]
    }
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="error"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-describedby="desc-test-ID"
          aria-invalid={true}
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <div
        id={null}
      >
        <InputMessage
          className="md-text-input-error"
          id="desc-test-ID"
          key="input-message-0"
          level="error"
          message="test"
        >
          <div
            className="md-input-message-wrapper md-text-input-error"
            id="desc-test-ID"
          >
            <div
              className="md-input-message-message"
              message-level="error"
            >
              <div
                className="md-input-message--icon"
              >
                <Icon
                  fillColor="var(--mds-color-theme-text-error-normal)"
                  name="warning"
                  scale={16}
                  weight="bold"
                >
                  <div
                    aria-hidden="true"
                    className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                    role="img"
                  >
                    <svg
                      aria-hidden="true"
                      className=""
                      data-autoscale={false}
                      data-scale={16}
                      data-test="warning"
                      height="100%"
                      style={
                        Object {
                          "fill": "var(--mds-color-theme-text-error-normal)",
                        }
                      }
                      viewBox="0, 0, 32, 32"
                      width="100%"
                    />
                  </div>
                </Icon>
              </div>
              <Text
                className="md-input-message--text"
                tagName="small"
                type="body-secondary"
              >
                <Text
                  className="md-text-wrapper md-input-message--text"
                  tagname="small"
                  type="body-midsize-regular"
                >
                  <mdc-text
                    class="md-text-wrapper md-input-message--text"
                    suppressHydrationWarning={true}
                  >
                    test
                  </mdc-text>
                </Text>
              </Text>
            </div>
          </div>
        </InputMessage>
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with id 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    id="example-id"
    label="text-input"
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="example-id"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="example-id"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="example-id"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with inputMaxLen 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    inputMaxLen={4}
    label="text-input"
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          maxLength={4}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with isDisabled 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    isDisabled={true}
    label="text-input"
  >
    <div
      className="md-text-input-wrapper"
      data-disabled={true}
      data-focus={false}
      data-level="none"
      onClick={[Function]}
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={true}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;

exports[`<TextInput/> snapshot should match snapshot with style 1`] = `
<SSRProvider>
  <TextInput
    clearAriaLabel="Clear this input"
    label="text-input"
    style={
      Object {
        "color": "pink",
      }
    }
  >
    <div
      className="md-text-input-wrapper"
      data-focus={false}
      data-level="none"
      onClick={[Function]}
      style={
        Object {
          "color": "pink",
        }
      }
    >
      <label
        htmlFor="test-ID"
        id="desc-test-ID"
      >
        text-input
      </label>
      <div
        className="md-text-input-container"
      >
        <input
          aria-labelledby="test-ID"
          disabled={false}
          id="test-ID"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="text"
        />
      </div>
      <ScreenReaderAnnouncer
        identity="test-ID"
      >
        <div
          className="md-screen-reader-announcer-wrapper"
          data-testid="screen-reader-announcer"
          style={
            Object {
              "clip": "rect(0 0 0 0)",
              "clipPath": "inset(50%)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "whiteSpace": "nowrap",
              "width": "1px",
            }
          }
        />
      </ScreenReaderAnnouncer>
    </div>
  </TextInput>
</SSRProvider>
`;
