// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ComboBox snapshot should match snapshot label 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
  label="comboBox_label"
>
  <div
    className="md-combo-box-label"
  >
    comboBox_label
  </div>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot with className 1`] = `
<ComboBox
  className="example-class"
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
>
  <div
    className="example-class md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot with noResultText 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
  noResultText="No result"
>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot with placeholder 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
  placeholder="ComboBox"
>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder="ComboBox"
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder="ComboBox"
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot with style 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
  style={
    Object {
      "color": "pink",
    }
  }
>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
        "color": "pink",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot with width 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "menu1",
          },
          Object {
            "key": "key5",
            "label": "menu2",
          },
          Object {
            "key": "key6",
            "label": "menu3",
          },
        ],
      },
    ]
  }
  width="16rem"
>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;

exports[`ComboBox snapshot should match snapshot withSection 1`] = `
<ComboBox
  comboBoxGroups={
    Array [
      Object {
        "items": Array [
          Object {
            "key": "key1",
            "label": "item1",
          },
          Object {
            "key": "key2",
            "label": "item2",
          },
          Object {
            "key": "key3",
            "label": "item3",
          },
          Object {
            "key": "key4",
            "label": "item4",
          },
        ],
        "section": "section1",
      },
      Object {
        "items": Array [
          Object {
            "key": "key5",
            "label": "item5",
          },
          Object {
            "key": "key6",
            "label": "item6",
          },
          Object {
            "key": "key7",
            "label": "item7",
          },
          Object {
            "key": "key8",
            "label": "item8",
          },
        ],
        "section": "section2",
      },
    ]
  }
>
  <div
    className="md-combo-box-wrapper"
    data-error={false}
    data-input-have-value={false}
    style={
      Object {
        "--local-width": "16.25rem",
      }
    }
  >
    <div
      className="md-combo-box-input-section"
    >
      <TextInput
        aria-label="md-combo-box-input"
        autoComplete="off"
        className="md-combo-box-input"
        clearAriaLabel=""
        onInput={[Function]}
        placeholder=""
        value=""
      >
        <div
          className="md-text-input-wrapper md-combo-box-input"
          data-focus={false}
          data-level="none"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <div
            className="md-text-input-container"
          >
            <input
              aria-label="md-combo-box-input"
              autoComplete="off"
              disabled={false}
              id="test-ID"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInput={[Function]}
              placeholder=""
              readOnly={false}
              type="text"
              value=""
            />
          </div>
          <ScreenReaderAnnouncer
            identity="test-ID"
          >
            <div
              className="md-screen-reader-announcer-wrapper"
              data-testid="screen-reader-announcer"
              style={
                Object {
                  "clip": "rect(0 0 0 0)",
                  "clipPath": "inset(50%)",
                  "height": "1px",
                  "overflow": "hidden",
                  "position": "absolute",
                  "whiteSpace": "nowrap",
                  "width": "1px",
                }
              }
            />
          </ScreenReaderAnnouncer>
        </div>
      </TextInput>
      <div
        className="md-combo-box-divider"
      />
      <ButtonPill
        className="md-combo-box-button"
        onClick={[Function]}
        stopPropagation={false}
        variant="tertiary"
      >
        <Button
          className="md-button-pill-wrapper md-combo-box-button"
          color="default"
          data-disabled-outline={false}
          data-grown={false}
          onClick={[Function]}
          onPointerDown={[Function]}
          onPointerUp={[Function]}
          size={40}
          softDisabled={false}
          variant="tertiary"
        >
          <mdc-button
            class="md-button-pill-wrapper md-combo-box-button"
            data-disabled-outline={false}
            data-grown={false}
            onPointerDown={[Function]}
            onPointerUp={[Function]}
            suppressHydrationWarning={true}
          >
            <Mrv2Icon
              className="md-combo-box-arrow-icon"
              key=".$.0"
              name="arrow-down"
              scale={12}
              weight="filled"
            >
              <Icon
                className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                data-autoscale={false}
                data-scale={12}
                data-test="arrow-down"
                name="arrow-down-filled"
                style={Object {}}
              >
                <mdc-icon
                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink md-combo-box-arrow-icon"
                  data-autoscale={false}
                  data-scale={12}
                  data-test="arrow-down"
                  style={Object {}}
                  suppressHydrationWarning={true}
                />
              </Icon>
            </Mrv2Icon>
          </mdc-button>
        </Button>
      </ButtonPill>
    </div>
  </div>
</ComboBox>
`;
