// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SpaceRowContent /> snapshot checks divider dot position in compact mode 1`] = `
<SpaceRowContent
  firstLine="firstLine"
  isCompact={true}
  secondLine="testteam"
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-row"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-row"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        >
          firstLine
        </p>
      </Text>
      <DividerDot
        data-test="compact-mode-divider-dot"
      >
        <div
          className="md-divider-dot-wrapper"
        />
      </DividerDot>
      <Text
        aria-label="testteam"
        data-test="list-item-second-line"
        style={
          Object {
            "color": "var(--mds-color-theme-text-teamdefault-normal)",
          }
        }
        type="body-secondary"
      >
        <small
          aria-label="testteam"
          className="md-text-wrapper"
          data-test="list-item-second-line"
          data-type="body-secondary"
          style={
            Object {
              "color": "var(--mds-color-theme-text-teamdefault-normal)",
            }
          }
        >
          <SecondLineElement
            key="second-line-item-0"
            showDividerDot={false}
          >
            testteam
          </SecondLineElement>
        </small>
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot 1`] = `
<SpaceRowContent>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with action 1`] = `
<SpaceRowContent
  action={
    <p>
      action
    </p>
  }
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <p>
        action
      </p>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with firstLine 1`] = `
<SpaceRowContent
  firstLine="firstLine"
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        >
          firstLine
        </p>
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isAlert 1`] = `
<SpaceRowContent
  isAlert={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-text-primary-normal)"
        name="alert"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="alert"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-text-primary-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isAlertMuted 1`] = `
<SpaceRowContent
  isAlertMuted={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-text-primary-normal)"
        name="alert-muted"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="alert-muted"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-text-primary-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isDisabled 1`] = `
<SpaceRowContent
  isDisabled={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={true}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={true}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isEnterRoom 1`] = `
<SpaceRowContent
  isEnterRoom={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-control-active-normal)"
        name="enter-room"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="enter-room"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-control-active-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isError 1`] = `
<SpaceRowContent
  isError={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-text-error-normal)"
        name="priority-circle"
        scale={14}
        strokeColor="none"
        weight="filled"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="priority-circle"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-text-error-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isMention 1`] = `
<SpaceRowContent
  isMention={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-control-active-normal)"
        name="mention"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="mention"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-control-active-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isSelected 1`] = `
<SpaceRowContent
  isSelected={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isSelected and draft 1`] = `
<SpaceRowContent
  isDraft={true}
  isSelected={false}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-text-primary-normal)"
        name="draft-indicator"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="draft-indicator"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-text-primary-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with isUnread 1`] = `
<SpaceRowContent
  isUnread={true}
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column md-space-row-content-is-new-activity"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    >
      <Icon
        fillColor="var(--mds-color-theme-control-active-normal)"
        name="unread"
        scale={14}
        strokeColor="none"
        weight="bold"
      >
        <div
          aria-hidden="true"
          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
          role="img"
        >
          <svg
            aria-hidden="true"
            className=""
            data-autoscale={false}
            data-scale={14}
            data-test="unread"
            height="100%"
            style={
              Object {
                "fill": "var(--mds-color-theme-control-active-normal)",
                "stroke": "none",
              }
            }
            viewBox="0, 0, 32, 32"
            width="100%"
          />
        </div>
      </Icon>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with menuItems 1`] = `
<SpaceRowContent
  menuItems={
    Array [
      Object {
        "key": "item-1",
        "text": "Item 1",
      },
    ]
  }
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-menu-trigger-wrapper"
    position="end"
  >
    <div
      className="md-space-row-content-menu-trigger-wrapper"
      data-position="end"
    >
      <ForwardRef
        triggerComponent={
          <ButtonCircle
            ghost={true}
            size={28}
          >
            <Icon
              name="more"
              scale={24}
              weight="bold"
            />
          </ButtonCircle>
        }
      >
        <Popover
          autoFocus={false}
          className="md-menu-trigger-wrapper"
          color="primary"
          hideOnEsc={false}
          interactive={true}
          onClickOutside={[Function]}
          onKeyDown={[Function]}
          placement="bottom-start"
          role="generic"
          setInstance={[Function]}
          showArrow={false}
          trigger="click"
          triggerComponent={
            <ButtonCircle
              aria-controls={null}
              aria-expanded={false}
              aria-haspopup={true}
              ghost={true}
              id="test-ID"
              onPress={[Function]}
              onPressStart={[Function]}
              size={28}
            >
              <Icon
                name="more"
                scale={24}
                weight="bold"
              />
            </ButtonCircle>
          }
          variant="medium"
        >
          <LazyTippy
            animation={false}
            appendTo="parent"
            hideOnClick={true}
            interactive={true}
            offset={
              Array [
                0,
                5,
              ]
            }
            onClickOutside={[Function]}
            onHidden={[Function]}
            placement="bottom-start"
            plugins={
              Array [
                Object {
                  "fn": [Function],
                  "name": "addBackdropPlugin",
                },
              ]
            }
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": false,
                    "name": "arrow",
                    "options": Object {
                      "element": "#arrow021639e8-3f33-40c7-a53d-09ffd0860b64",
                      "padding": 5,
                    },
                  },
                  Object {
                    "name": "preventOverflow",
                    "options": Object {
                      "altAxis": true,
                      "boundariesElement": "scrollParent",
                      "padding": 8,
                    },
                  },
                ],
                "strategy": "absolute",
              }
            }
            render={[Function]}
            setInstance={[Function]}
            trigger="click"
          >
            <ForwardRef(TippyWrapper)
              animation={false}
              appendTo="parent"
              hideOnClick={true}
              interactive={true}
              offset={
                Array [
                  0,
                  5,
                ]
              }
              onClickOutside={[Function]}
              onHidden={[Function]}
              placement="bottom-start"
              plugins={
                Array [
                  Object {
                    "fn": [Function],
                  },
                  Object {
                    "fn": [Function],
                  },
                  Object {
                    "fn": [Function],
                  },
                  Object {
                    "fn": [Function],
                    "name": "addBackdropPlugin",
                  },
                ]
              }
              popperOptions={
                Object {
                  "modifiers": Array [
                    Object {
                      "enabled": false,
                      "name": "arrow",
                      "options": Object {
                        "element": "#arrow021639e8-3f33-40c7-a53d-09ffd0860b64",
                        "padding": 5,
                      },
                    },
                    Object {
                      "name": "preventOverflow",
                      "options": Object {
                        "altAxis": true,
                        "boundariesElement": "scrollParent",
                        "padding": 8,
                      },
                    },
                  ],
                  "strategy": "absolute",
                }
              }
              render={[Function]}
              trigger="click"
            >
              <Tippy
                animation={false}
                appendTo="parent"
                hideOnClick={true}
                interactive={true}
                offset={
                  Array [
                    0,
                    5,
                  ]
                }
                onClickOutside={[Function]}
                onHidden={[Function]}
                placement="bottom-start"
                plugins={
                  Array [
                    Object {
                      "fn": [Function],
                    },
                    Object {
                      "fn": [Function],
                    },
                    Object {
                      "fn": [Function],
                    },
                    Object {
                      "fn": [Function],
                      "name": "addBackdropPlugin",
                    },
                  ]
                }
                popperOptions={
                  Object {
                    "modifiers": Array [
                      Object {
                        "enabled": false,
                        "name": "arrow",
                        "options": Object {
                          "element": "#arrow021639e8-3f33-40c7-a53d-09ffd0860b64",
                          "padding": 5,
                        },
                      },
                      Object {
                        "name": "preventOverflow",
                        "options": Object {
                          "altAxis": true,
                          "boundariesElement": "scrollParent",
                          "padding": 8,
                        },
                      },
                    ],
                    "strategy": "absolute",
                  }
                }
                render={[Function]}
                trigger="click"
              >
                <ButtonCircle
                  aria-controls={null}
                  aria-expanded={false}
                  aria-haspopup={true}
                  ghost={true}
                  id="test-ID"
                  onPress={[Function]}
                  onPressStart={[Function]}
                  size={28}
                  useNativeKeyDown={true}
                >
                  <ButtonSimple
                    aria-controls={null}
                    aria-disabled={false}
                    aria-expanded={false}
                    aria-haspopup={true}
                    className="md-button-circle-wrapper"
                    data-color="primary"
                    data-disabled={false}
                    data-ghost={true}
                    data-inverted={false}
                    data-multiple-children={false}
                    data-outline={false}
                    data-shallow-disabled={false}
                    data-size={28}
                    id="test-ID"
                    onPress={[Function]}
                    onPressStart={[Function]}
                    useNativeKeyDown={true}
                  >
                    <FocusRing>
                      <FocusRing
                        focusClass="md-focus-ring-wrapper children"
                        focusRingClass="md-focus-ring-wrapper children"
                      >
                        <button
                          aria-controls={null}
                          aria-expanded={false}
                          aria-haspopup={true}
                          className="md-button-circle-wrapper md-button-simple-wrapper"
                          data-color="primary"
                          data-disabled={false}
                          data-ghost={true}
                          data-inverted={false}
                          data-multiple-children={false}
                          data-outline={false}
                          data-shallow-disabled={false}
                          data-size={28}
                          id="test-ID"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragStart={[Function]}
                          onFocus={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchCancel={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          type="button"
                        >
                          <Icon
                            name="more"
                            scale={24}
                            weight="bold"
                          >
                            <div
                              aria-hidden="true"
                              className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                              role="img"
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-autoscale={false}
                                data-scale={24}
                                data-test="more"
                                fill="currentColor"
                                height="100%"
                                style={Object {}}
                                viewBox="0, 0, 32, 32"
                                width="100%"
                              />
                            </div>
                          </Icon>
                        </button>
                      </FocusRing>
                    </FocusRing>
                  </ButtonSimple>
                </ButtonCircle>
                <Portal
                  containerInfo={
                    <div
                      data-tippy-root=""
                      id="tippy-1"
                      style="z-index: 9999;"
                    >
                      
                    </div>
                  }
                />
              </Tippy>
            </ForwardRef(TippyWrapper)>
          </LazyTippy>
        </Popover>
      </ForwardRef>
    </div>
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with multiple string secondLine 1`] = `
<SpaceRowContent
  secondLine={
    Array [
      "one",
      "two",
      "three",
    ]
  }
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
      <Text
        aria-label="one, two, three"
        data-test="list-item-second-line"
        style={
          Object {
            "color": "var(--mds-color-theme-text-teamdefault-normal)",
          }
        }
        type="body-secondary"
      >
        <small
          aria-label="one, two, three"
          className="md-text-wrapper"
          data-test="list-item-second-line"
          data-type="body-secondary"
          style={
            Object {
              "color": "var(--mds-color-theme-text-teamdefault-normal)",
            }
          }
        >
          <SecondLineElement
            key="second-line-item-0"
            showDividerDot={false}
          >
            one
          </SecondLineElement>
          <SecondLineElement
            key="second-line-item-1"
            showDividerDot={true}
          >
            <DividerDot
              data-test="multiple-string-second-line-divider-dot"
            >
              <div
                className="md-divider-dot-wrapper"
              />
            </DividerDot>
            two
          </SecondLineElement>
          <SecondLineElement
            key="second-line-item-2"
            showDividerDot={true}
          >
            <DividerDot
              data-test="multiple-string-second-line-divider-dot"
            >
              <div
                className="md-divider-dot-wrapper"
              />
            </DividerDot>
            three
          </SecondLineElement>
        </small>
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with secondLine 1`] = `
<SpaceRowContent
  secondLine="secondLine"
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
      <Text
        aria-label="secondLine"
        data-test="list-item-second-line"
        style={
          Object {
            "color": "var(--mds-color-theme-text-teamdefault-normal)",
          }
        }
        type="body-secondary"
      >
        <small
          aria-label="secondLine"
          className="md-text-wrapper"
          data-test="list-item-second-line"
          data-type="body-secondary"
          style={
            Object {
              "color": "var(--mds-color-theme-text-teamdefault-normal)",
            }
          }
        >
          <SecondLineElement
            key="second-line-item-0"
            showDividerDot={false}
          >
            secondLine
          </SecondLineElement>
        </small>
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;

exports[`<SpaceRowContent /> snapshot should match snapshot with teamColor 1`] = `
<SpaceRowContent
  teamColor="cobalt"
>
  <ListItemBaseSection
    position="start"
  >
    <div
      data-position="start"
    />
  </ListItemBaseSection>
  <ListItemBaseSection
    className="md-space-row-content-text-wrapper text-column"
    position="middle"
  >
    <div
      className="md-space-row-content-text-wrapper text-column"
      data-position="middle"
    >
      <Text
        data-disabled={false}
        data-test="list-item-first-line"
        type="body-primary"
      >
        <p
          className="md-text-wrapper"
          data-disabled={false}
          data-test="list-item-first-line"
          data-type="body-primary"
        />
      </Text>
    </div>
  </ListItemBaseSection>
  <ListItemBaseSection
    position="end"
  >
    <div
      data-position="end"
    />
  </ListItemBaseSection>
</SpaceRowContent>
`;
