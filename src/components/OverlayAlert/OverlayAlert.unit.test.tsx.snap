// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OverlayAlert /> snapshot should match snapshot 1`] = `
<OverlayAlert>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with actions 1`] = `
<OverlayAlert
  actions={
    <ButtonPill>
      Button Pill
    </ButtonPill>
  }
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div>
                    <button
                      class="md-button-pill-wrapper md-button-simple-wrapper"
                      data-color="primary"
                      data-disabled="false"
                      data-ghost="false"
                      data-grown="false"
                      data-inverted="false"
                      data-outline="false"
                      data-shallow-disabled="false"
                      data-size="40"
                      type="button"
                    >
                      <span>
                        Button Pill
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div>
                      <button
                        class="md-button-pill-wrapper md-button-simple-wrapper"
                        data-color="primary"
                        data-disabled="false"
                        data-ghost="false"
                        data-grown="false"
                        data-inverted="false"
                        data-outline="false"
                        data-shallow-disabled="false"
                        data-size="40"
                        type="button"
                      >
                        <span>
                          Button Pill
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div>
                <ButtonPill>
                  <ButtonSimple
                    className="md-button-pill-wrapper"
                    data-color="primary"
                    data-disabled={false}
                    data-ghost={false}
                    data-grown={false}
                    data-inverted={false}
                    data-outline={false}
                    data-shallow-disabled={false}
                    data-size={40}
                  >
                    <FocusRing>
                      <FocusRing
                        focusClass="md-focus-ring-wrapper children"
                        focusRingClass="md-focus-ring-wrapper children"
                      >
                        <button
                          className="md-button-pill-wrapper md-button-simple-wrapper"
                          data-color="primary"
                          data-disabled={false}
                          data-ghost={false}
                          data-grown={false}
                          data-inverted={false}
                          data-outline={false}
                          data-shallow-disabled={false}
                          data-size={40}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragStart={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchCancel={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          type="button"
                        >
                          <span>
                            Button Pill
                          </span>
                        </button>
                      </FocusRing>
                    </FocusRing>
                  </ButtonSimple>
                </ButtonPill>
              </div>
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with className 1`] = `
<OverlayAlert
  className="example-class"
>
  <Overlay
    className="example-class md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="example-class md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="example-class md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="example-class md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with controls 1`] = `
<OverlayAlert
  controls={
    <ButtonControl
      control="close"
    />
  }
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div>
                      <button
                        class="md-button-control-wrapper md-button-simple-wrapper"
                        type="button"
                      />
                    </div>
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div>
                        <button
                          class="md-button-control-wrapper md-button-simple-wrapper"
                          type="button"
                        />
                      </div>
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div>
                  <ButtonControl
                    control="close"
                  >
                    <ButtonSimple
                      className="md-button-control-wrapper"
                    >
                      <FocusRing>
                        <FocusRing
                          focusClass="md-focus-ring-wrapper children"
                          focusRingClass="md-focus-ring-wrapper children"
                        >
                          <button
                            className="md-button-control-wrapper md-button-simple-wrapper"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchCancel={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            type="button"
                          >
                            <Icon
                              autoScale={true}
                              name="cancel"
                              weight="bold"
                            />
                          </button>
                        </FocusRing>
                      </FocusRing>
                    </ButtonSimple>
                  </ButtonControl>
                </div>
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with details 1`] = `
<OverlayAlert
  details="example-details"
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div>
                    <p
                      class="md-text-wrapper md-overlay-alert-details"
                      data-type="body-primary"
                    >
                      example-details
                    </p>
                  </div>
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div>
                      <p
                        class="md-text-wrapper md-overlay-alert-details"
                        data-type="body-primary"
                      >
                        example-details
                      </p>
                    </div>
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div>
                <Text
                  className="md-overlay-alert-details"
                  type="body-primary"
                >
                  <p
                    className="md-text-wrapper md-overlay-alert-details"
                    data-type="body-primary"
                  >
                    example-details
                  </p>
                </Text>
              </div>
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with details and children 1`] = `
<OverlayAlert
  details="example-details"
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div>
                    example-children
                  </div>
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div>
                      example-children
                    </div>
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div>
                example-children
              </div>
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with id 1`] = `
<OverlayAlert
  id="example-id"
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    id="example-id"
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
                id="example-id"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                  id="example-id"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          id="example-id"
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with multiple actions 1`] = `
<OverlayAlert
  actions={
    <React.Fragment>
      <ButtonPill>
        Button Pill
      </ButtonPill>
      ,
      <ButtonPill>
        Button Pill
      </ButtonPill>
      ,
      <ButtonPill>
        Button Pill
      </ButtonPill>
      ,
    </React.Fragment>
  }
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div>
                    <button
                      class="md-button-pill-wrapper md-button-simple-wrapper"
                      data-color="primary"
                      data-disabled="false"
                      data-ghost="false"
                      data-grown="false"
                      data-inverted="false"
                      data-outline="false"
                      data-shallow-disabled="false"
                      data-size="40"
                      type="button"
                    >
                      <span>
                        Button Pill
                      </span>
                    </button>
                    ,
                    <button
                      class="md-button-pill-wrapper md-button-simple-wrapper"
                      data-color="primary"
                      data-disabled="false"
                      data-ghost="false"
                      data-grown="false"
                      data-inverted="false"
                      data-outline="false"
                      data-shallow-disabled="false"
                      data-size="40"
                      type="button"
                    >
                      <span>
                        Button Pill
                      </span>
                    </button>
                    ,
                    <button
                      class="md-button-pill-wrapper md-button-simple-wrapper"
                      data-color="primary"
                      data-disabled="false"
                      data-ghost="false"
                      data-grown="false"
                      data-inverted="false"
                      data-outline="false"
                      data-shallow-disabled="false"
                      data-size="40"
                      type="button"
                    >
                      <span>
                        Button Pill
                      </span>
                    </button>
                    ,
                  </div>
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div>
                      <button
                        class="md-button-pill-wrapper md-button-simple-wrapper"
                        data-color="primary"
                        data-disabled="false"
                        data-ghost="false"
                        data-grown="false"
                        data-inverted="false"
                        data-outline="false"
                        data-shallow-disabled="false"
                        data-size="40"
                        type="button"
                      >
                        <span>
                          Button Pill
                        </span>
                      </button>
                      ,
                      <button
                        class="md-button-pill-wrapper md-button-simple-wrapper"
                        data-color="primary"
                        data-disabled="false"
                        data-ghost="false"
                        data-grown="false"
                        data-inverted="false"
                        data-outline="false"
                        data-shallow-disabled="false"
                        data-size="40"
                        type="button"
                      >
                        <span>
                          Button Pill
                        </span>
                      </button>
                      ,
                      <button
                        class="md-button-pill-wrapper md-button-simple-wrapper"
                        data-color="primary"
                        data-disabled="false"
                        data-ghost="false"
                        data-grown="false"
                        data-inverted="false"
                        data-outline="false"
                        data-shallow-disabled="false"
                        data-size="40"
                        type="button"
                      >
                        <span>
                          Button Pill
                        </span>
                      </button>
                      ,
                    </div>
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div>
                <ButtonPill
                  key="0"
                >
                  <ButtonSimple
                    className="md-button-pill-wrapper"
                    data-color="primary"
                    data-disabled={false}
                    data-ghost={false}
                    data-grown={false}
                    data-inverted={false}
                    data-outline={false}
                    data-shallow-disabled={false}
                    data-size={40}
                  >
                    <FocusRing>
                      <FocusRing
                        focusClass="md-focus-ring-wrapper children"
                        focusRingClass="md-focus-ring-wrapper children"
                      >
                        <button
                          className="md-button-pill-wrapper md-button-simple-wrapper"
                          data-color="primary"
                          data-disabled={false}
                          data-ghost={false}
                          data-grown={false}
                          data-inverted={false}
                          data-outline={false}
                          data-shallow-disabled={false}
                          data-size={40}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragStart={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchCancel={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          type="button"
                        >
                          <span>
                            Button Pill
                          </span>
                        </button>
                      </FocusRing>
                    </FocusRing>
                  </ButtonSimple>
                </ButtonPill>
                ,
                <ButtonPill
                  key="1"
                >
                  <ButtonSimple
                    className="md-button-pill-wrapper"
                    data-color="primary"
                    data-disabled={false}
                    data-ghost={false}
                    data-grown={false}
                    data-inverted={false}
                    data-outline={false}
                    data-shallow-disabled={false}
                    data-size={40}
                  >
                    <FocusRing>
                      <FocusRing
                        focusClass="md-focus-ring-wrapper children"
                        focusRingClass="md-focus-ring-wrapper children"
                      >
                        <button
                          className="md-button-pill-wrapper md-button-simple-wrapper"
                          data-color="primary"
                          data-disabled={false}
                          data-ghost={false}
                          data-grown={false}
                          data-inverted={false}
                          data-outline={false}
                          data-shallow-disabled={false}
                          data-size={40}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragStart={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchCancel={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          type="button"
                        >
                          <span>
                            Button Pill
                          </span>
                        </button>
                      </FocusRing>
                    </FocusRing>
                  </ButtonSimple>
                </ButtonPill>
                ,
                <ButtonPill
                  key="2"
                >
                  <ButtonSimple
                    className="md-button-pill-wrapper"
                    data-color="primary"
                    data-disabled={false}
                    data-ghost={false}
                    data-grown={false}
                    data-inverted={false}
                    data-outline={false}
                    data-shallow-disabled={false}
                    data-size={40}
                  >
                    <FocusRing>
                      <FocusRing
                        focusClass="md-focus-ring-wrapper children"
                        focusRingClass="md-focus-ring-wrapper children"
                      >
                        <button
                          className="md-button-pill-wrapper md-button-simple-wrapper"
                          data-color="primary"
                          data-disabled={false}
                          data-ghost={false}
                          data-grown={false}
                          data-inverted={false}
                          data-outline={false}
                          data-shallow-disabled={false}
                          data-size={40}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragStart={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchCancel={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          type="button"
                        >
                          <span>
                            Button Pill
                          </span>
                        </button>
                      </FocusRing>
                    </FocusRing>
                  </ButtonSimple>
                </ButtonPill>
                ,
              </div>
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with multiple controls 1`] = `
<OverlayAlert
  controls={
    <React.Fragment>
      <ButtonControl
        control="close"
      />
      ,
      <ButtonControl
        control="favorite"
      />
      ,
      <ButtonControl
        control="maximize"
      />
      ,
    </React.Fragment>
  }
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div>
                      <button
                        class="md-button-control-wrapper md-button-simple-wrapper"
                        type="button"
                      />
                      ,
                      <button
                        class="md-button-control-wrapper md-button-simple-wrapper"
                        type="button"
                      />
                      ,
                      <button
                        class="md-button-control-wrapper md-button-simple-wrapper"
                        type="button"
                      />
                      ,
                    </div>
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div>
                        <button
                          class="md-button-control-wrapper md-button-simple-wrapper"
                          type="button"
                        />
                        ,
                        <button
                          class="md-button-control-wrapper md-button-simple-wrapper"
                          type="button"
                        />
                        ,
                        <button
                          class="md-button-control-wrapper md-button-simple-wrapper"
                          type="button"
                        />
                        ,
                      </div>
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div>
                  <ButtonControl
                    control="close"
                    key="0"
                  >
                    <ButtonSimple
                      className="md-button-control-wrapper"
                    >
                      <FocusRing>
                        <FocusRing
                          focusClass="md-focus-ring-wrapper children"
                          focusRingClass="md-focus-ring-wrapper children"
                        >
                          <button
                            className="md-button-control-wrapper md-button-simple-wrapper"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchCancel={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            type="button"
                          >
                            <Icon
                              autoScale={true}
                              name="cancel"
                              weight="bold"
                            />
                          </button>
                        </FocusRing>
                      </FocusRing>
                    </ButtonSimple>
                  </ButtonControl>
                  ,
                  <ButtonControl
                    control="favorite"
                    key="1"
                  >
                    <ButtonSimple
                      className="md-button-control-wrapper"
                    >
                      <FocusRing>
                        <FocusRing
                          focusClass="md-focus-ring-wrapper children"
                          focusRingClass="md-focus-ring-wrapper children"
                        >
                          <button
                            className="md-button-control-wrapper md-button-simple-wrapper"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchCancel={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            type="button"
                          >
                            <Icon
                              autoScale={true}
                              color="var(--mds-color-theme-text-warning-normal)"
                              name="favorite"
                              weight="filled"
                            />
                          </button>
                        </FocusRing>
                      </FocusRing>
                    </ButtonSimple>
                  </ButtonControl>
                  ,
                  <ButtonControl
                    control="maximize"
                    key="2"
                  >
                    <ButtonSimple
                      className="md-button-control-wrapper"
                    >
                      <FocusRing>
                        <FocusRing
                          focusClass="md-focus-ring-wrapper children"
                          focusRingClass="md-focus-ring-wrapper children"
                        >
                          <button
                            className="md-button-control-wrapper md-button-simple-wrapper"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchCancel={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            type="button"
                          >
                            <Icon
                              autoScale={true}
                              name="arrow-up"
                              weight="bold"
                            />
                          </button>
                        </FocusRing>
                      </FocusRing>
                    </ButtonSimple>
                  </ButtonControl>
                  ,
                </div>
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with style 1`] = `
<OverlayAlert
  style={
    Object {
      "color": "pink",
    }
  }
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
    style={
      Object {
        "color": "pink",
      }
    }
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
                style="color: pink;"
              >
                <div
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                  style="color: pink;"
                >
                  <div
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
          style={
            Object {
              "color": "pink",
            }
          }
        >
          <ModalContainer
            round={75}
          >
            <div
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;

exports[`<OverlayAlert /> snapshot should match snapshot with title 1`] = `
<OverlayAlert
  title="example-title"
>
  <Overlay
    className="md-overlay-alert-wrapper"
    color="secondary"
    focusLockProps={
      Object {
        "returnFocus": true,
      }
    }
    onKeyDown={[Function]}
  >
    <FocusLock
      as="div"
      autoFocus={true}
      disabled={false}
      lockProps={Object {}}
      noFocusGuards={false}
      persistentFocus={false}
      returnFocus={true}
    >
      <div
        data-focus-guard={true}
        key="guard-first"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
      <div
        data-focus-guard={true}
        key="guard-nearest"
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={1}
      />
      <div
        data-focus-lock-disabled={false}
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="md-overlay-alert-wrapper md-overlay-wrapper"
                data-color="secondary"
                data-fullscreen="false"
              >
                <div
                  aria-labelledby="test-ID"
                  class="md-modal-container-wrapper"
                  data-color="primary"
                  data-elevation="0"
                  data-padded="false"
                  data-round="75"
                >
                  <div>
                    <div />
                  </div>
                  <div
                    class="md-overlay-alert-title"
                  >
                    <h2
                      class="md-text-wrapper md-overlay-alert-title"
                      data-type="title"
                      id="test-ID"
                    >
                      example-title
                    </h2>
                  </div>
                  <div />
                  <div />
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          shards={Array []}
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  class="md-overlay-alert-wrapper md-overlay-wrapper"
                  data-color="secondary"
                  data-fullscreen="false"
                >
                  <div
                    aria-labelledby="test-ID"
                    class="md-modal-container-wrapper"
                    data-color="primary"
                    data-elevation="0"
                    data-padded="false"
                    data-round="75"
                  >
                    <div>
                      <div />
                    </div>
                    <div
                      class="md-overlay-alert-title"
                    >
                      <h2
                        class="md-text-wrapper md-overlay-alert-title"
                        data-type="title"
                        id="test-ID"
                      >
                        example-title
                      </h2>
                    </div>
                    <div />
                    <div />
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            shards={Array []}
          />
        </SideEffect(FocusWatcher)>
        <div
          className="md-overlay-alert-wrapper md-overlay-wrapper"
          data-color="secondary"
          data-fullscreen={false}
          onKeyDown={[Function]}
        >
          <ModalContainer
            aria-labelledby="test-ID"
            round={75}
          >
            <div
              aria-labelledby="test-ID"
              className="md-modal-container-wrapper"
              data-color="primary"
              data-elevation={0}
              data-padded={false}
              data-round={75}
            >
              <div>
                <div />
              </div>
              <div
                className="md-overlay-alert-title"
              >
                <Text
                  className="md-overlay-alert-title"
                  id="test-ID"
                  type="title"
                >
                  <h2
                    className="md-text-wrapper md-overlay-alert-title"
                    data-type="title"
                    id="test-ID"
                  >
                    example-title
                  </h2>
                </Text>
              </div>
              <div />
              <div />
            </div>
          </ModalContainer>
        </div>
      </div>
      <div
        data-focus-guard={true}
        style={
          Object {
            "height": "0px",
            "left": "1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "fixed",
            "top": "1px",
            "width": "1px",
          }
        }
        tabIndex={0}
      />
    </FocusLock>
  </Overlay>
</OverlayAlert>
`;
