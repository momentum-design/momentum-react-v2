// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <Lightbox /> should match SnapShot 1`] = `
<Lightbox
  alt="test"
  applicationId="app"
  decrypting={false}
  downloading={false}
  height={100}
  imgClassName=""
  index={0}
  info={Object {}}
  isImageRotated={false}
  name="test"
  onChange={null}
  onClose={null}
  onDownload={[MockFunction]}
  pages={
    Array [
      Object {
        "decrypting": true,
        "image": "testImage",
        "thumb": "testImage",
      },
    ]
  }
  popoverProps={
    Object {
      "direction": "bottom-right",
      "isContained": true,
    }
  }
  theme="darkWebex"
  tooltips={
    Object {
      "download": "Download",
      "downloading": "Downloading...",
      "exit": "Exit",
      "next": "Next",
      "previous": "Previous",
      "zoomIn": "Zoom in",
      "zoomOut": "Zoom out",
    }
  }
  width={100}
>
  <Displaced
    aria-labelledby="test-ID"
    dialogClass="md-lightbox"
    focusDialog={true}
    getApplicationNode={[Function]}
    includeDefaultStyles={false}
    mounted={true}
    onExit={[Function]}
    titleId="md-lightbox"
    underlayClass="md-lightbox__container"
  >
    <Portal
      containerInfo={
        <div>
          <div>
            <div
              class="md-lightbox__container"
            >
              <div
                aria-labelledby="test-ID"
                class="md-lightbox"
                id="react-aria-modal-dialog"
                role="dialog"
                tabindex="-1"
              >
                <mdc-themeprovider
                  class="md-theme-darkWebex mds-typography mds-elevation"
                >
                  <mdc-iconprovider>
                    <div
                      class="md-theme-provider-wrapper md-theme-provider-globals"
                    >
                      <div
                        class="md-lightbox__header"
                      >
                        <div
                          class="md-lightbox__header-item--left"
                        >
                          <div
                            class="md-lightbox__header-meta"
                          >
                            <div
                              class="md-lightbox__header-sharer"
                            />
                            <div
                              class="md-lightbox__header-timestamp"
                            />
                          </div>
                        </div>
                        <div
                          class="md-lightbox__header-item--center"
                        >
                          <h2
                            class="md-lightbox__header-name"
                            id="test-ID"
                          >
                            test
                          </h2>
                        </div>
                        <div
                          class="md-lightbox__header-item--right"
                        >
                          <button
                            aria-labelledby="test-ID"
                            class="md-lightbox__control md-lightbox__control-close md-button-simple-wrapper"
                            type="button"
                          >
                            <mdc-icon
                              class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                              data-autoscale="false"
                              data-scale="20"
                              data-test="cancel"
                              style="--mdc-icon-fill-color: var(--mds-color-theme-common-text-primary-normal);"
                            />
                          </button>
                          <div
                            class="md-tooltip-label"
                            id="test-ID"
                          >
                            Exit
                          </div>
                        </div>
                      </div>
                      <div
                        class="md-lightbox__body"
                        role="tablist"
                      >
                        <div
                          class="md-lightbox__content"
                        >
                          <div
                            class="md-lightbox__viewport md-lightbox__viewport--decrypting"
                          >
                            <div
                              aria-hidden="true"
                              class="md-lightbox__decrypting-spinner md-loading-spinner-wrapper"
                              role="img"
                            >
                              <mdc-spinner
                                style="--mdc-spinner-size: 2rem;"
                              />
                            </div>
                            <div
                              class="md-lightbox__viewport-wrapper"
                              style="width: 100px; height: 100px;"
                            >
                              <img
                                alt="test"
                                class="md-lightbox__viewport-image"
                                draggable="false"
                                src="testImage"
                              />
                            </div>
                          </div>
                          <div
                            class="md-lightbox__viewer-controls"
                            role="group"
                          >
                            <div
                              class="md-lightbox__controls"
                            >
                              <button
                                aria-labelledby="test-ID"
                                class="md-lightbox__control md-button-simple-wrapper"
                                data-test="zoom-out-button"
                                type="button"
                              >
                                <mdc-icon
                                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                  data-autoscale="false"
                                  data-scale="20"
                                  data-test="zoom-out"
                                  style="--mdc-icon-fill-color: var(--mds-color-theme-common-text-primary-normal);"
                                />
                              </button>
                              <div
                                class="md-tooltip-label"
                                id="test-ID"
                              >
                                Zoom out
                              </div>
                              <span
                                class="md-lightbox__control-value md-lightbox__control-zoom-level"
                              >
                                100%
                              </span>
                              <button
                                aria-labelledby="test-ID"
                                class="md-lightbox__control md-button-simple-wrapper"
                                data-test="zoom-in-button"
                                type="button"
                              >
                                <mdc-icon
                                  class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                  data-autoscale="false"
                                  data-scale="20"
                                  data-test="zoom-in"
                                  style="--mdc-icon-fill-color: var(--mds-color-theme-common-text-primary-normal);"
                                />
                              </button>
                              <div
                                class="md-tooltip-label"
                                id="test-ID"
                              >
                                Zoom in
                              </div>
                            </div>
                            <div
                              class="md-lightbox__controls"
                            >
                              <span
                                class="md-lightbox__control-value"
                              >
                                1
                              </span>
                            </div>
                            <button
                              aria-labelledby="test-ID"
                              class="md-lightbox__control md-lightbox__control-download md-button-simple-wrapper"
                              type="button"
                            >
                              <mdc-icon
                                class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                data-autoscale="false"
                                data-scale="20"
                                data-test="download"
                                style="--mdc-icon-fill-color: var(--mds-color-theme-common-text-primary-normal);"
                              />
                            </button>
                            <div
                              class="md-tooltip-label"
                              id="test-ID"
                            >
                              Download
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </mdc-iconprovider>
                </mdc-themeprovider>
              </div>
            </div>
          </div>
        </div>
      }
    >
      <Modal
        aria-labelledby="test-ID"
        dialogClass="md-lightbox"
        dialogId="react-aria-modal-dialog"
        escapeExits={true}
        focusDialog={true}
        focusTrapPaused={false}
        getApplicationNode={[Function]}
        includeDefaultStyles={false}
        mounted={true}
        onExit={[Function]}
        scrollDisabled={true}
        titleId="md-lightbox"
        underlayClass="md-lightbox__container"
        underlayClickExits={true}
        underlayColor="rgba(0,0,0,0.5)"
        underlayProps={Object {}}
      >
        <FocusTrap
          _createFocusTrap={[Function]}
          active={true}
          focusTrapOptions={
            Object {
              "escapeDeactivates": true,
              "initialFocus": "#react-aria-modal-dialog",
            }
          }
          paused={false}
          tag="div"
        >
          <div>
            <div
              className="md-lightbox__container"
              onMouseDown={[Function]}
              style={Object {}}
            >
              <div
                aria-labelledby="test-ID"
                className="md-lightbox"
                id="react-aria-modal-dialog"
                key="b"
                role="dialog"
                style={Object {}}
                tabIndex="-1"
              >
                <ThemeProvider
                  theme="darkWebex"
                >
                  <ThemeProvider
                    className="md-theme-darkWebex mds-typography mds-elevation"
                    themeclass="mds-theme-stable-darkWebex"
                  >
                    <mdc-themeprovider
                      class="md-theme-darkWebex mds-typography mds-elevation"
                      suppressHydrationWarning={true}
                    >
                      <IconProvider>
                        <mdc-iconprovider
                          suppressHydrationWarning={true}
                        >
                          <div
                            className="md-theme-provider-wrapper md-theme-provider-globals"
                          >
                            <div
                              className="md-lightbox__header"
                            >
                              <div
                                className="md-lightbox__header-item--left"
                              >
                                <div
                                  className="md-lightbox__header-meta"
                                >
                                  <div
                                    className="md-lightbox__header-sharer"
                                  />
                                  <div
                                    className="md-lightbox__header-timestamp"
                                  />
                                </div>
                              </div>
                              <div
                                className="md-lightbox__header-item--center"
                              >
                                <h2
                                  className="md-lightbox__header-name"
                                  id="test-ID"
                                >
                                  test
                                </h2>
                              </div>
                              <div
                                className="md-lightbox__header-item--right"
                              >
                                <Tooltip
                                  placement="bottom-start"
                                  style={Object {}}
                                  triggerComponent={
                                    <ButtonSimple
                                      className="md-lightbox__control md-lightbox__control-close"
                                      onPress={[Function]}
                                    >
                                      <Icon
                                        fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                        name="cancel"
                                        scale={20}
                                        weight="light"
                                      />
                                    </ButtonSimple>
                                  }
                                  type="label"
                                >
                                  <Popover
                                    addBackdrop={false}
                                    aria-hidden={false}
                                    boundary="scrollParent"
                                    color="primary"
                                    interactive={false}
                                    offsetDistance={5}
                                    offsetSkidding={0}
                                    placement="bottom-start"
                                    role="tooltip"
                                    setInstance={[Function]}
                                    showArrow={true}
                                    strategy="absolute"
                                    style={Object {}}
                                    trigger="mouseenter focus"
                                    triggerComponent={
                                      <ButtonSimple
                                        aria-labelledby="test-ID"
                                        className="md-lightbox__control md-lightbox__control-close"
                                        onPress={[Function]}
                                      >
                                        <Icon
                                          fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                          name="cancel"
                                          scale={20}
                                          weight="light"
                                        />
                                      </ButtonSimple>
                                    }
                                    variant="small"
                                  >
                                    <LazyTippy
                                      animation={false}
                                      appendTo="parent"
                                      hideOnClick={true}
                                      interactive={false}
                                      offset={
                                        Array [
                                          0,
                                          17,
                                        ]
                                      }
                                      onHidden={[Function]}
                                      placement="bottom-start"
                                      plugins={
                                        Array [
                                          Object {
                                            "defaultValue": true,
                                            "fn": [Function],
                                            "name": "hideOnEsc",
                                          },
                                        ]
                                      }
                                      popperOptions={
                                        Object {
                                          "modifiers": Array [
                                            Object {
                                              "enabled": true,
                                              "name": "arrow",
                                              "options": Object {
                                                "element": "#arrowtest-ID",
                                                "padding": 5,
                                              },
                                            },
                                            Object {
                                              "name": "preventOverflow",
                                              "options": Object {
                                                "altAxis": true,
                                                "boundariesElement": "scrollParent",
                                                "padding": 8,
                                              },
                                            },
                                          ],
                                          "strategy": "absolute",
                                        }
                                      }
                                      render={[Function]}
                                      setInstance={[Function]}
                                      trigger="mouseenter focus"
                                    >
                                      <ForwardRef(TippyWrapper)
                                        animation={false}
                                        appendTo="parent"
                                        hideOnClick={true}
                                        interactive={false}
                                        offset={
                                          Array [
                                            0,
                                            17,
                                          ]
                                        }
                                        onHidden={[Function]}
                                        placement="bottom-start"
                                        plugins={
                                          Array [
                                            Object {
                                              "fn": [Function],
                                            },
                                            Object {
                                              "fn": [Function],
                                            },
                                            Object {
                                              "fn": [Function],
                                            },
                                            Object {
                                              "defaultValue": true,
                                              "fn": [Function],
                                              "name": "hideOnEsc",
                                            },
                                          ]
                                        }
                                        popperOptions={
                                          Object {
                                            "modifiers": Array [
                                              Object {
                                                "enabled": true,
                                                "name": "arrow",
                                                "options": Object {
                                                  "element": "#arrowtest-ID",
                                                  "padding": 5,
                                                },
                                              },
                                              Object {
                                                "name": "preventOverflow",
                                                "options": Object {
                                                  "altAxis": true,
                                                  "boundariesElement": "scrollParent",
                                                  "padding": 8,
                                                },
                                              },
                                            ],
                                            "strategy": "absolute",
                                          }
                                        }
                                        render={[Function]}
                                        trigger="mouseenter focus"
                                      >
                                        <Tippy
                                          animation={false}
                                          appendTo="parent"
                                          hideOnClick={true}
                                          interactive={false}
                                          offset={
                                            Array [
                                              0,
                                              17,
                                            ]
                                          }
                                          onHidden={[Function]}
                                          placement="bottom-start"
                                          plugins={
                                            Array [
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "defaultValue": true,
                                                "fn": [Function],
                                                "name": "hideOnEsc",
                                              },
                                            ]
                                          }
                                          popperOptions={
                                            Object {
                                              "modifiers": Array [
                                                Object {
                                                  "enabled": true,
                                                  "name": "arrow",
                                                  "options": Object {
                                                    "element": "#arrowtest-ID",
                                                    "padding": 5,
                                                  },
                                                },
                                                Object {
                                                  "name": "preventOverflow",
                                                  "options": Object {
                                                    "altAxis": true,
                                                    "boundariesElement": "scrollParent",
                                                    "padding": 8,
                                                  },
                                                },
                                              ],
                                              "strategy": "absolute",
                                            }
                                          }
                                          render={[Function]}
                                          trigger="mouseenter focus"
                                        >
                                          <ButtonSimple
                                            aria-labelledby="test-ID"
                                            className="md-lightbox__control md-lightbox__control-close"
                                            onPress={[Function]}
                                            useNativeKeyDown={true}
                                          >
                                            <FocusRing>
                                              <FocusRing
                                                focusClass="md-focus-ring-wrapper children"
                                                focusRingClass="md-focus-ring-wrapper children"
                                              >
                                                <button
                                                  aria-labelledby="test-ID"
                                                  className="md-lightbox__control md-lightbox__control-close md-button-simple-wrapper"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragStart={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchCancel={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  type="button"
                                                >
                                                  <Icon
                                                    fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                                    name="cancel"
                                                    scale={20}
                                                    weight="light"
                                                  >
                                                    <Icon
                                                      className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                      data-autoscale={false}
                                                      data-scale={20}
                                                      data-test="cancel"
                                                      name="cancel-light"
                                                      style={
                                                        Object {
                                                          "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                        }
                                                      }
                                                    >
                                                      <mdc-icon
                                                        class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                        data-autoscale={false}
                                                        data-scale={20}
                                                        data-test="cancel"
                                                        style={
                                                          Object {
                                                            "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                          }
                                                        }
                                                        suppressHydrationWarning={true}
                                                      />
                                                    </Icon>
                                                  </Icon>
                                                </button>
                                              </FocusRing>
                                            </FocusRing>
                                          </ButtonSimple>
                                          <Portal
                                            containerInfo={
                                              <div
                                                data-tippy-root=""
                                                id="tippy-1"
                                                style="pointer-events: none; z-index: 9999;"
                                              >
                                                
                                              </div>
                                            }
                                          />
                                        </Tippy>
                                      </ForwardRef(TippyWrapper)>
                                    </LazyTippy>
                                  </Popover>
                                  <div
                                    className="md-tooltip-label"
                                    id="test-ID"
                                  >
                                    Exit
                                  </div>
                                </Tooltip>
                              </div>
                            </div>
                            <div
                              className="md-lightbox__body"
                              role="tablist"
                            >
                              <div
                                className="md-lightbox__content"
                              >
                                <div
                                  className="md-lightbox__viewport md-lightbox__viewport--decrypting"
                                >
                                  <LoadingSpinner
                                    aria-hidden={true}
                                    className="md-lightbox__decrypting-spinner"
                                    scale={32}
                                  >
                                    <div
                                      aria-hidden={true}
                                      className="md-lightbox__decrypting-spinner md-loading-spinner-wrapper"
                                      role="img"
                                    >
                                      <Spinner
                                        inverted={false}
                                        style={
                                          Object {
                                            "--mdc-spinner-size": "2rem",
                                          }
                                        }
                                        variant="standalone"
                                      >
                                        <mdc-spinner
                                          style={
                                            Object {
                                              "--mdc-spinner-size": "2rem",
                                            }
                                          }
                                          suppressHydrationWarning={true}
                                        />
                                      </Spinner>
                                    </div>
                                  </LoadingSpinner>
                                  <div
                                    className="md-lightbox__viewport-wrapper"
                                    style={
                                      Object {
                                        "height": "100px",
                                        "width": "100px",
                                      }
                                    }
                                  >
                                    <img
                                      alt="test"
                                      className="md-lightbox__viewport-image"
                                      draggable="false"
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onDragStart={[Function]}
                                      onKeyPress={[Function]}
                                      src="testImage"
                                    />
                                  </div>
                                </div>
                                <div
                                  className="md-lightbox__viewer-controls"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  role="group"
                                >
                                  <div
                                    className="md-lightbox__controls"
                                    style={Object {}}
                                  >
                                    <Tooltip
                                      placement="top"
                                      style={Object {}}
                                      triggerComponent={
                                        <ButtonSimple
                                          className="md-lightbox__control"
                                          data-test="zoom-out-button"
                                          onPress={[Function]}
                                        >
                                          <Icon
                                            fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                            name="zoom-out"
                                            scale={20}
                                            weight="light"
                                          />
                                        </ButtonSimple>
                                      }
                                      type="label"
                                    >
                                      <Popover
                                        addBackdrop={false}
                                        aria-hidden={false}
                                        boundary="scrollParent"
                                        color="primary"
                                        interactive={false}
                                        offsetDistance={5}
                                        offsetSkidding={0}
                                        placement="top"
                                        role="tooltip"
                                        setInstance={[Function]}
                                        showArrow={true}
                                        strategy="absolute"
                                        style={Object {}}
                                        trigger="mouseenter focus"
                                        triggerComponent={
                                          <ButtonSimple
                                            aria-labelledby="test-ID"
                                            className="md-lightbox__control"
                                            data-test="zoom-out-button"
                                            onPress={[Function]}
                                          >
                                            <Icon
                                              fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                              name="zoom-out"
                                              scale={20}
                                              weight="light"
                                            />
                                          </ButtonSimple>
                                        }
                                        variant="small"
                                      >
                                        <LazyTippy
                                          animation={false}
                                          appendTo="parent"
                                          hideOnClick={true}
                                          interactive={false}
                                          offset={
                                            Array [
                                              0,
                                              17,
                                            ]
                                          }
                                          onHidden={[Function]}
                                          placement="top"
                                          plugins={
                                            Array [
                                              Object {
                                                "defaultValue": true,
                                                "fn": [Function],
                                                "name": "hideOnEsc",
                                              },
                                            ]
                                          }
                                          popperOptions={
                                            Object {
                                              "modifiers": Array [
                                                Object {
                                                  "enabled": true,
                                                  "name": "arrow",
                                                  "options": Object {
                                                    "element": "#arrowtest-ID",
                                                    "padding": 5,
                                                  },
                                                },
                                                Object {
                                                  "name": "preventOverflow",
                                                  "options": Object {
                                                    "altAxis": true,
                                                    "boundariesElement": "scrollParent",
                                                    "padding": 8,
                                                  },
                                                },
                                              ],
                                              "strategy": "absolute",
                                            }
                                          }
                                          render={[Function]}
                                          setInstance={[Function]}
                                          trigger="mouseenter focus"
                                        >
                                          <ForwardRef(TippyWrapper)
                                            animation={false}
                                            appendTo="parent"
                                            hideOnClick={true}
                                            interactive={false}
                                            offset={
                                              Array [
                                                0,
                                                17,
                                              ]
                                            }
                                            onHidden={[Function]}
                                            placement="top"
                                            plugins={
                                              Array [
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "defaultValue": true,
                                                  "fn": [Function],
                                                  "name": "hideOnEsc",
                                                },
                                              ]
                                            }
                                            popperOptions={
                                              Object {
                                                "modifiers": Array [
                                                  Object {
                                                    "enabled": true,
                                                    "name": "arrow",
                                                    "options": Object {
                                                      "element": "#arrowtest-ID",
                                                      "padding": 5,
                                                    },
                                                  },
                                                  Object {
                                                    "name": "preventOverflow",
                                                    "options": Object {
                                                      "altAxis": true,
                                                      "boundariesElement": "scrollParent",
                                                      "padding": 8,
                                                    },
                                                  },
                                                ],
                                                "strategy": "absolute",
                                              }
                                            }
                                            render={[Function]}
                                            trigger="mouseenter focus"
                                          >
                                            <Tippy
                                              animation={false}
                                              appendTo="parent"
                                              hideOnClick={true}
                                              interactive={false}
                                              offset={
                                                Array [
                                                  0,
                                                  17,
                                                ]
                                              }
                                              onHidden={[Function]}
                                              placement="top"
                                              plugins={
                                                Array [
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "defaultValue": true,
                                                    "fn": [Function],
                                                    "name": "hideOnEsc",
                                                  },
                                                ]
                                              }
                                              popperOptions={
                                                Object {
                                                  "modifiers": Array [
                                                    Object {
                                                      "enabled": true,
                                                      "name": "arrow",
                                                      "options": Object {
                                                        "element": "#arrowtest-ID",
                                                        "padding": 5,
                                                      },
                                                    },
                                                    Object {
                                                      "name": "preventOverflow",
                                                      "options": Object {
                                                        "altAxis": true,
                                                        "boundariesElement": "scrollParent",
                                                        "padding": 8,
                                                      },
                                                    },
                                                  ],
                                                  "strategy": "absolute",
                                                }
                                              }
                                              render={[Function]}
                                              trigger="mouseenter focus"
                                            >
                                              <ButtonSimple
                                                aria-labelledby="test-ID"
                                                className="md-lightbox__control"
                                                data-test="zoom-out-button"
                                                onPress={[Function]}
                                                useNativeKeyDown={true}
                                              >
                                                <FocusRing>
                                                  <FocusRing
                                                    focusClass="md-focus-ring-wrapper children"
                                                    focusRingClass="md-focus-ring-wrapper children"
                                                  >
                                                    <button
                                                      aria-labelledby="test-ID"
                                                      className="md-lightbox__control md-button-simple-wrapper"
                                                      data-test="zoom-out-button"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchCancel={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      type="button"
                                                    >
                                                      <Icon
                                                        fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                                        name="zoom-out"
                                                        scale={20}
                                                        weight="light"
                                                      >
                                                        <Icon
                                                          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                          data-autoscale={false}
                                                          data-scale={20}
                                                          data-test="zoom-out"
                                                          name="zoom-out-light"
                                                          style={
                                                            Object {
                                                              "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                            }
                                                          }
                                                        >
                                                          <mdc-icon
                                                            class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                            data-autoscale={false}
                                                            data-scale={20}
                                                            data-test="zoom-out"
                                                            style={
                                                              Object {
                                                                "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                              }
                                                            }
                                                            suppressHydrationWarning={true}
                                                          />
                                                        </Icon>
                                                      </Icon>
                                                    </button>
                                                  </FocusRing>
                                                </FocusRing>
                                              </ButtonSimple>
                                              <Portal
                                                containerInfo={
                                                  <div
                                                    data-tippy-root=""
                                                    id="tippy-2"
                                                    style="pointer-events: none; z-index: 9999;"
                                                  >
                                                    
                                                  </div>
                                                }
                                              />
                                            </Tippy>
                                          </ForwardRef(TippyWrapper)>
                                        </LazyTippy>
                                      </Popover>
                                      <div
                                        className="md-tooltip-label"
                                        id="test-ID"
                                      >
                                        Zoom out
                                      </div>
                                    </Tooltip>
                                    <span
                                      className="md-lightbox__control-value md-lightbox__control-zoom-level"
                                    >
                                      100%
                                    </span>
                                    <Tooltip
                                      placement="top"
                                      style={Object {}}
                                      triggerComponent={
                                        <ButtonSimple
                                          className="md-lightbox__control"
                                          data-test="zoom-in-button"
                                          onPress={[Function]}
                                        >
                                          <Icon
                                            fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                            name="zoom-in"
                                            scale={20}
                                            weight="light"
                                          />
                                        </ButtonSimple>
                                      }
                                      type="label"
                                    >
                                      <Popover
                                        addBackdrop={false}
                                        aria-hidden={false}
                                        boundary="scrollParent"
                                        color="primary"
                                        interactive={false}
                                        offsetDistance={5}
                                        offsetSkidding={0}
                                        placement="top"
                                        role="tooltip"
                                        setInstance={[Function]}
                                        showArrow={true}
                                        strategy="absolute"
                                        style={Object {}}
                                        trigger="mouseenter focus"
                                        triggerComponent={
                                          <ButtonSimple
                                            aria-labelledby="test-ID"
                                            className="md-lightbox__control"
                                            data-test="zoom-in-button"
                                            onPress={[Function]}
                                          >
                                            <Icon
                                              fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                              name="zoom-in"
                                              scale={20}
                                              weight="light"
                                            />
                                          </ButtonSimple>
                                        }
                                        variant="small"
                                      >
                                        <LazyTippy
                                          animation={false}
                                          appendTo="parent"
                                          hideOnClick={true}
                                          interactive={false}
                                          offset={
                                            Array [
                                              0,
                                              17,
                                            ]
                                          }
                                          onHidden={[Function]}
                                          placement="top"
                                          plugins={
                                            Array [
                                              Object {
                                                "defaultValue": true,
                                                "fn": [Function],
                                                "name": "hideOnEsc",
                                              },
                                            ]
                                          }
                                          popperOptions={
                                            Object {
                                              "modifiers": Array [
                                                Object {
                                                  "enabled": true,
                                                  "name": "arrow",
                                                  "options": Object {
                                                    "element": "#arrowtest-ID",
                                                    "padding": 5,
                                                  },
                                                },
                                                Object {
                                                  "name": "preventOverflow",
                                                  "options": Object {
                                                    "altAxis": true,
                                                    "boundariesElement": "scrollParent",
                                                    "padding": 8,
                                                  },
                                                },
                                              ],
                                              "strategy": "absolute",
                                            }
                                          }
                                          render={[Function]}
                                          setInstance={[Function]}
                                          trigger="mouseenter focus"
                                        >
                                          <ForwardRef(TippyWrapper)
                                            animation={false}
                                            appendTo="parent"
                                            hideOnClick={true}
                                            interactive={false}
                                            offset={
                                              Array [
                                                0,
                                                17,
                                              ]
                                            }
                                            onHidden={[Function]}
                                            placement="top"
                                            plugins={
                                              Array [
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "defaultValue": true,
                                                  "fn": [Function],
                                                  "name": "hideOnEsc",
                                                },
                                              ]
                                            }
                                            popperOptions={
                                              Object {
                                                "modifiers": Array [
                                                  Object {
                                                    "enabled": true,
                                                    "name": "arrow",
                                                    "options": Object {
                                                      "element": "#arrowtest-ID",
                                                      "padding": 5,
                                                    },
                                                  },
                                                  Object {
                                                    "name": "preventOverflow",
                                                    "options": Object {
                                                      "altAxis": true,
                                                      "boundariesElement": "scrollParent",
                                                      "padding": 8,
                                                    },
                                                  },
                                                ],
                                                "strategy": "absolute",
                                              }
                                            }
                                            render={[Function]}
                                            trigger="mouseenter focus"
                                          >
                                            <Tippy
                                              animation={false}
                                              appendTo="parent"
                                              hideOnClick={true}
                                              interactive={false}
                                              offset={
                                                Array [
                                                  0,
                                                  17,
                                                ]
                                              }
                                              onHidden={[Function]}
                                              placement="top"
                                              plugins={
                                                Array [
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "fn": [Function],
                                                  },
                                                  Object {
                                                    "defaultValue": true,
                                                    "fn": [Function],
                                                    "name": "hideOnEsc",
                                                  },
                                                ]
                                              }
                                              popperOptions={
                                                Object {
                                                  "modifiers": Array [
                                                    Object {
                                                      "enabled": true,
                                                      "name": "arrow",
                                                      "options": Object {
                                                        "element": "#arrowtest-ID",
                                                        "padding": 5,
                                                      },
                                                    },
                                                    Object {
                                                      "name": "preventOverflow",
                                                      "options": Object {
                                                        "altAxis": true,
                                                        "boundariesElement": "scrollParent",
                                                        "padding": 8,
                                                      },
                                                    },
                                                  ],
                                                  "strategy": "absolute",
                                                }
                                              }
                                              render={[Function]}
                                              trigger="mouseenter focus"
                                            >
                                              <ButtonSimple
                                                aria-labelledby="test-ID"
                                                className="md-lightbox__control"
                                                data-test="zoom-in-button"
                                                onPress={[Function]}
                                                useNativeKeyDown={true}
                                              >
                                                <FocusRing>
                                                  <FocusRing
                                                    focusClass="md-focus-ring-wrapper children"
                                                    focusRingClass="md-focus-ring-wrapper children"
                                                  >
                                                    <button
                                                      aria-labelledby="test-ID"
                                                      className="md-lightbox__control md-button-simple-wrapper"
                                                      data-test="zoom-in-button"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchCancel={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      type="button"
                                                    >
                                                      <Icon
                                                        fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                                        name="zoom-in"
                                                        scale={20}
                                                        weight="light"
                                                      >
                                                        <Icon
                                                          className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                          data-autoscale={false}
                                                          data-scale={20}
                                                          data-test="zoom-in"
                                                          name="zoom-in-light"
                                                          style={
                                                            Object {
                                                              "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                            }
                                                          }
                                                        >
                                                          <mdc-icon
                                                            class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                            data-autoscale={false}
                                                            data-scale={20}
                                                            data-test="zoom-in"
                                                            style={
                                                              Object {
                                                                "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                              }
                                                            }
                                                            suppressHydrationWarning={true}
                                                          />
                                                        </Icon>
                                                      </Icon>
                                                    </button>
                                                  </FocusRing>
                                                </FocusRing>
                                              </ButtonSimple>
                                              <Portal
                                                containerInfo={
                                                  <div
                                                    data-tippy-root=""
                                                    id="tippy-3"
                                                    style="pointer-events: none; z-index: 9999;"
                                                  >
                                                    
                                                  </div>
                                                }
                                              />
                                            </Tippy>
                                          </ForwardRef(TippyWrapper)>
                                        </LazyTippy>
                                      </Popover>
                                      <div
                                        className="md-tooltip-label"
                                        id="test-ID"
                                      >
                                        Zoom in
                                      </div>
                                    </Tooltip>
                                  </div>
                                  <div
                                    className="md-lightbox__controls"
                                  >
                                    <span
                                      className="md-lightbox__control-value"
                                    >
                                      1
                                    </span>
                                  </div>
                                  <Tooltip
                                    placement="top"
                                    style={Object {}}
                                    triggerComponent={
                                      <ButtonSimple
                                        className="md-lightbox__control md-lightbox__control-download"
                                        onPress={[Function]}
                                      >
                                        <Icon
                                          fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                          name="download"
                                          scale={20}
                                          weight="light"
                                        />
                                      </ButtonSimple>
                                    }
                                    type="label"
                                  >
                                    <Popover
                                      addBackdrop={false}
                                      aria-hidden={false}
                                      boundary="scrollParent"
                                      color="primary"
                                      interactive={false}
                                      offsetDistance={5}
                                      offsetSkidding={0}
                                      placement="top"
                                      role="tooltip"
                                      setInstance={[Function]}
                                      showArrow={true}
                                      strategy="absolute"
                                      style={Object {}}
                                      trigger="mouseenter focus"
                                      triggerComponent={
                                        <ButtonSimple
                                          aria-labelledby="test-ID"
                                          className="md-lightbox__control md-lightbox__control-download"
                                          onPress={[Function]}
                                        >
                                          <Icon
                                            fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                            name="download"
                                            scale={20}
                                            weight="light"
                                          />
                                        </ButtonSimple>
                                      }
                                      variant="small"
                                    >
                                      <LazyTippy
                                        animation={false}
                                        appendTo="parent"
                                        hideOnClick={true}
                                        interactive={false}
                                        offset={
                                          Array [
                                            0,
                                            17,
                                          ]
                                        }
                                        onHidden={[Function]}
                                        placement="top"
                                        plugins={
                                          Array [
                                            Object {
                                              "defaultValue": true,
                                              "fn": [Function],
                                              "name": "hideOnEsc",
                                            },
                                          ]
                                        }
                                        popperOptions={
                                          Object {
                                            "modifiers": Array [
                                              Object {
                                                "enabled": true,
                                                "name": "arrow",
                                                "options": Object {
                                                  "element": "#arrowtest-ID",
                                                  "padding": 5,
                                                },
                                              },
                                              Object {
                                                "name": "preventOverflow",
                                                "options": Object {
                                                  "altAxis": true,
                                                  "boundariesElement": "scrollParent",
                                                  "padding": 8,
                                                },
                                              },
                                            ],
                                            "strategy": "absolute",
                                          }
                                        }
                                        render={[Function]}
                                        setInstance={[Function]}
                                        trigger="mouseenter focus"
                                      >
                                        <ForwardRef(TippyWrapper)
                                          animation={false}
                                          appendTo="parent"
                                          hideOnClick={true}
                                          interactive={false}
                                          offset={
                                            Array [
                                              0,
                                              17,
                                            ]
                                          }
                                          onHidden={[Function]}
                                          placement="top"
                                          plugins={
                                            Array [
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "fn": [Function],
                                              },
                                              Object {
                                                "defaultValue": true,
                                                "fn": [Function],
                                                "name": "hideOnEsc",
                                              },
                                            ]
                                          }
                                          popperOptions={
                                            Object {
                                              "modifiers": Array [
                                                Object {
                                                  "enabled": true,
                                                  "name": "arrow",
                                                  "options": Object {
                                                    "element": "#arrowtest-ID",
                                                    "padding": 5,
                                                  },
                                                },
                                                Object {
                                                  "name": "preventOverflow",
                                                  "options": Object {
                                                    "altAxis": true,
                                                    "boundariesElement": "scrollParent",
                                                    "padding": 8,
                                                  },
                                                },
                                              ],
                                              "strategy": "absolute",
                                            }
                                          }
                                          render={[Function]}
                                          trigger="mouseenter focus"
                                        >
                                          <Tippy
                                            animation={false}
                                            appendTo="parent"
                                            hideOnClick={true}
                                            interactive={false}
                                            offset={
                                              Array [
                                                0,
                                                17,
                                              ]
                                            }
                                            onHidden={[Function]}
                                            placement="top"
                                            plugins={
                                              Array [
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "fn": [Function],
                                                },
                                                Object {
                                                  "defaultValue": true,
                                                  "fn": [Function],
                                                  "name": "hideOnEsc",
                                                },
                                              ]
                                            }
                                            popperOptions={
                                              Object {
                                                "modifiers": Array [
                                                  Object {
                                                    "enabled": true,
                                                    "name": "arrow",
                                                    "options": Object {
                                                      "element": "#arrowtest-ID",
                                                      "padding": 5,
                                                    },
                                                  },
                                                  Object {
                                                    "name": "preventOverflow",
                                                    "options": Object {
                                                      "altAxis": true,
                                                      "boundariesElement": "scrollParent",
                                                      "padding": 8,
                                                    },
                                                  },
                                                ],
                                                "strategy": "absolute",
                                              }
                                            }
                                            render={[Function]}
                                            trigger="mouseenter focus"
                                          >
                                            <ButtonSimple
                                              aria-labelledby="test-ID"
                                              className="md-lightbox__control md-lightbox__control-download"
                                              onPress={[Function]}
                                              useNativeKeyDown={true}
                                            >
                                              <FocusRing>
                                                <FocusRing
                                                  focusClass="md-focus-ring-wrapper children"
                                                  focusRingClass="md-focus-ring-wrapper children"
                                                >
                                                  <button
                                                    aria-labelledby="test-ID"
                                                    className="md-lightbox__control md-lightbox__control-download md-button-simple-wrapper"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchCancel={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      fillColor="var(--mds-color-theme-common-text-primary-normal)"
                                                      name="download"
                                                      scale={20}
                                                      weight="light"
                                                    >
                                                      <Icon
                                                        className="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                        data-autoscale={false}
                                                        data-scale={20}
                                                        data-test="download"
                                                        name="download-light"
                                                        style={
                                                          Object {
                                                            "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                          }
                                                        }
                                                      >
                                                        <mdc-icon
                                                          class="md-icon-wrapper md-icon-auto-scales md-icon-scales md-icon-no-shrink"
                                                          data-autoscale={false}
                                                          data-scale={20}
                                                          data-test="download"
                                                          style={
                                                            Object {
                                                              "--mdc-icon-fill-color": "var(--mds-color-theme-common-text-primary-normal)",
                                                            }
                                                          }
                                                          suppressHydrationWarning={true}
                                                        />
                                                      </Icon>
                                                    </Icon>
                                                  </button>
                                                </FocusRing>
                                              </FocusRing>
                                            </ButtonSimple>
                                            <Portal
                                              containerInfo={
                                                <div
                                                  data-tippy-root=""
                                                  id="tippy-4"
                                                  style="pointer-events: none; z-index: 9999;"
                                                >
                                                  
                                                </div>
                                              }
                                            />
                                          </Tippy>
                                        </ForwardRef(TippyWrapper)>
                                      </LazyTippy>
                                    </Popover>
                                    <div
                                      className="md-tooltip-label"
                                      id="test-ID"
                                    >
                                      Download
                                    </div>
                                  </Tooltip>
                                </div>
                              </div>
                            </div>
                          </div>
                        </mdc-iconprovider>
                      </IconProvider>
                    </mdc-themeprovider>
                  </ThemeProvider>
                </ThemeProvider>
              </div>
            </div>
          </div>
        </FocusTrap>
      </Modal>
    </Portal>
  </Displaced>
</Lightbox>
`;
