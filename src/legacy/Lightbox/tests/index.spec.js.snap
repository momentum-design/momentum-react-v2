// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <Lightbox /> should match SnapShot 1`] = `
<Lightbox
  alt="test"
  applicationId="app"
  decrypting={false}
  downloading={false}
  height={100}
  imgClassName=""
  index={0}
  info={{}}
  isImageRotated={false}
  name="test"
  onChange={null}
  onClose={null}
  onDownload={[MockFunction]}
  pages={
    [
      {
        "decrypting": true,
        "image": "testImage",
        "thumb": "testImage",
      },
    ]
  }
  popoverProps={
    {
      "direction": "bottom-right",
      "isContained": true,
    }
  }
  theme="darkWebex"
  tooltips={
    {
      "download": "Download",
      "downloading": "Downloading...",
      "exit": "Exit",
      "next": "Next",
      "previous": "Previous",
      "zoomIn": "Zoom in",
      "zoomOut": "Zoom out",
    }
  }
  width={100}
>
  <Displaced
    aria-labelledby="test-ID"
    dialogClass="md-lightbox"
    focusDialog={true}
    getApplicationNode={[Function]}
    includeDefaultStyles={false}
    mounted={true}
    onExit={[Function]}
    titleId="md-lightbox"
    underlayClass="md-lightbox__container"
  >
    <Portal
      containerInfo={
        <div>
          <div>
            <div
              class="md-lightbox__container"
            >
              <div
                aria-labelledby="test-ID"
                class="md-lightbox"
                id="react-aria-modal-dialog"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="md-theme-provider-wrapper md-theme-provider-globals md-theme-darkWebex mds-theme-stable-darkWebex"
                >
                  <div
                    class="md-lightbox__header"
                  >
                    <div
                      class="md-lightbox__header-item--left"
                    >
                      <div
                        class="md-lightbox__header-meta"
                      >
                        <div
                          class="md-lightbox__header-sharer"
                        />
                        <div
                          class="md-lightbox__header-timestamp"
                        />
                      </div>
                    </div>
                    <div
                      class="md-lightbox__header-item--center"
                    >
                      <h2
                        class="md-lightbox__header-name"
                        id="test-ID"
                      >
                        test
                      </h2>
                    </div>
                    <div
                      class="md-lightbox__header-item--right"
                    >
                      <button
                        aria-labelledby="test-ID"
                        class="md-lightbox__control md-lightbox__control-close md-button-simple-wrapper"
                        type="button"
                      />
                      <div
                        class="md-tooltip-label"
                        id="test-ID"
                      >
                        Exit
                      </div>
                    </div>
                  </div>
                  <div
                    class="md-lightbox__body"
                    role="tablist"
                  >
                    <div
                      class="md-lightbox__content"
                    >
                      <div
                        class="md-lightbox__viewport md-lightbox__viewport--decrypting"
                      >
                        <i
                          class="md-spinner md-spinner--36 md-spinner--black md-lightbox__decrypting-spinner"
                        />
                        <div
                          class="md-lightbox__viewport-wrapper"
                          style="width: 100px; height: 100px;"
                        >
                          <img
                            alt="test"
                            class="md-lightbox__viewport-image"
                            draggable="false"
                            src="testImage"
                          />
                        </div>
                      </div>
                      <div
                        class="md-lightbox__viewer-controls"
                        role="group"
                      >
                        <div
                          class="md-lightbox__controls"
                        >
                          <button
                            aria-labelledby="test-ID"
                            class="md-lightbox__control md-button-simple-wrapper"
                            data-test="zoom-out-button"
                            type="button"
                          />
                          <div
                            class="md-tooltip-label"
                            id="test-ID"
                          >
                            Zoom out
                          </div>
                          <span
                            class="md-lightbox__control-value md-lightbox__control-zoom-level"
                          >
                            100%
                          </span>
                          <button
                            aria-labelledby="test-ID"
                            class="md-lightbox__control md-button-simple-wrapper"
                            data-test="zoom-in-button"
                            type="button"
                          />
                          <div
                            class="md-tooltip-label"
                            id="test-ID"
                          >
                            Zoom in
                          </div>
                        </div>
                        <div
                          class="md-lightbox__controls"
                        >
                          <span
                            class="md-lightbox__control-value"
                          >
                            1
                          </span>
                        </div>
                        <button
                          aria-labelledby="test-ID"
                          class="md-lightbox__control md-lightbox__control-download md-button-simple-wrapper"
                          type="button"
                        />
                        <div
                          class="md-tooltip-label"
                          id="test-ID"
                        >
                          Download
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    >
      <Modal
        aria-labelledby="test-ID"
        dialogClass="md-lightbox"
        dialogId="react-aria-modal-dialog"
        escapeExits={true}
        focusDialog={true}
        focusTrapPaused={false}
        getApplicationNode={[Function]}
        includeDefaultStyles={false}
        mounted={true}
        onExit={[Function]}
        scrollDisabled={true}
        titleId="md-lightbox"
        underlayClass="md-lightbox__container"
        underlayClickExits={true}
        underlayColor="rgba(0,0,0,0.5)"
        underlayProps={{}}
      >
        <FocusTrap
          _createFocusTrap={[Function]}
          active={true}
          focusTrapOptions={
            {
              "escapeDeactivates": true,
              "initialFocus": "#react-aria-modal-dialog",
            }
          }
          paused={false}
          tag="div"
        >
          <div>
            <div
              className="md-lightbox__container"
              onMouseDown={[Function]}
              style={{}}
            >
              <div
                aria-labelledby="test-ID"
                className="md-lightbox"
                id="react-aria-modal-dialog"
                key="b"
                role="dialog"
                style={{}}
                tabIndex="-1"
              >
                <ThemeProvider
                  theme="darkWebex"
                >
                  <div
                    className="md-theme-provider-wrapper md-theme-provider-globals md-theme-darkWebex mds-theme-stable-darkWebex"
                  >
                    <div
                      className="md-lightbox__header"
                    >
                      <div
                        className="md-lightbox__header-item--left"
                      >
                        <div
                          className="md-lightbox__header-meta"
                        >
                          <div
                            className="md-lightbox__header-sharer"
                          />
                          <div
                            className="md-lightbox__header-timestamp"
                          />
                        </div>
                      </div>
                      <div
                        className="md-lightbox__header-item--center"
                      >
                        <h2
                          className="md-lightbox__header-name"
                          id="test-ID"
                        >
                          test
                        </h2>
                      </div>
                      <div
                        className="md-lightbox__header-item--right"
                      >
                        <Tooltip
                          placement="bottom-start"
                          triggerComponent={
                            <ButtonSimple
                              className="md-lightbox__control md-lightbox__control-close"
                              onPress={[Function]}
                            >
                              <Icon
                                color="var(--mds-color-theme-common-text-primary-normal)"
                                name="cancel"
                                scale={20}
                                weight="light"
                              />
                            </ButtonSimple>
                          }
                          type="label"
                        >
                          <Popover
                            addBackdrop={false}
                            aria-hidden={false}
                            boundary="scrollParent"
                            color="primary"
                            interactive={false}
                            offsetDistance={5}
                            offsetSkidding={0}
                            placement="bottom-start"
                            role="tooltip"
                            setInstance={[Function]}
                            showArrow={true}
                            strategy="absolute"
                            trigger="mouseenter focus"
                            triggerComponent={
                              <ButtonSimple
                                aria-labelledby="test-ID"
                                className="md-lightbox__control md-lightbox__control-close"
                                onPress={[Function]}
                              >
                                <Icon
                                  color="var(--mds-color-theme-common-text-primary-normal)"
                                  name="cancel"
                                  scale={20}
                                  weight="light"
                                />
                              </ButtonSimple>
                            }
                            variant="small"
                          >
                            <LazyTippy
                              animation={false}
                              appendTo="parent"
                              hideOnClick={true}
                              interactive={false}
                              offset={
                                [
                                  0,
                                  17,
                                ]
                              }
                              onHidden={[Function]}
                              placement="bottom-start"
                              plugins={
                                [
                                  {
                                    "defaultValue": true,
                                    "fn": [Function],
                                    "name": "hideOnEsc",
                                  },
                                ]
                              }
                              popperOptions={
                                {
                                  "modifiers": [
                                    {
                                      "enabled": true,
                                      "name": "arrow",
                                      "options": {
                                        "element": "#arrowtest-ID",
                                        "padding": 5,
                                      },
                                    },
                                    {
                                      "name": "preventOverflow",
                                      "options": {
                                        "altAxis": true,
                                        "boundariesElement": "scrollParent",
                                        "padding": 8,
                                      },
                                    },
                                  ],
                                  "strategy": "absolute",
                                }
                              }
                              render={[Function]}
                              setInstance={[Function]}
                              trigger="mouseenter focus"
                            >
                              <ForwardRef(TippyWrapper)
                                animation={false}
                                appendTo="parent"
                                hideOnClick={true}
                                interactive={false}
                                offset={
                                  [
                                    0,
                                    17,
                                  ]
                                }
                                onHidden={[Function]}
                                placement="bottom-start"
                                plugins={
                                  [
                                    {
                                      "fn": [Function],
                                    },
                                    {
                                      "fn": [Function],
                                    },
                                    {
                                      "fn": [Function],
                                    },
                                    {
                                      "defaultValue": true,
                                      "fn": [Function],
                                      "name": "hideOnEsc",
                                    },
                                  ]
                                }
                                popperOptions={
                                  {
                                    "modifiers": [
                                      {
                                        "enabled": true,
                                        "name": "arrow",
                                        "options": {
                                          "element": "#arrowtest-ID",
                                          "padding": 5,
                                        },
                                      },
                                      {
                                        "name": "preventOverflow",
                                        "options": {
                                          "altAxis": true,
                                          "boundariesElement": "scrollParent",
                                          "padding": 8,
                                        },
                                      },
                                    ],
                                    "strategy": "absolute",
                                  }
                                }
                                render={[Function]}
                                trigger="mouseenter focus"
                              >
                                <Tippy
                                  animation={false}
                                  appendTo="parent"
                                  hideOnClick={true}
                                  interactive={false}
                                  offset={
                                    [
                                      0,
                                      17,
                                    ]
                                  }
                                  onHidden={[Function]}
                                  placement="bottom-start"
                                  plugins={
                                    [
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "defaultValue": true,
                                        "fn": [Function],
                                        "name": "hideOnEsc",
                                      },
                                    ]
                                  }
                                  popperOptions={
                                    {
                                      "modifiers": [
                                        {
                                          "enabled": true,
                                          "name": "arrow",
                                          "options": {
                                            "element": "#arrowtest-ID",
                                            "padding": 5,
                                          },
                                        },
                                        {
                                          "name": "preventOverflow",
                                          "options": {
                                            "altAxis": true,
                                            "boundariesElement": "scrollParent",
                                            "padding": 8,
                                          },
                                        },
                                      ],
                                      "strategy": "absolute",
                                    }
                                  }
                                  render={[Function]}
                                  trigger="mouseenter focus"
                                >
                                  <ButtonSimple
                                    aria-labelledby="test-ID"
                                    className="md-lightbox__control md-lightbox__control-close"
                                    onPress={[Function]}
                                    useNativeKeyDown={true}
                                  >
                                    <FocusRing>
                                      <FocusRing
                                        focusClass="md-focus-ring-wrapper children"
                                        focusRingClass="md-focus-ring-wrapper children"
                                      >
                                        <button
                                          aria-labelledby="test-ID"
                                          className="md-lightbox__control md-lightbox__control-close md-button-simple-wrapper"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragStart={[Function]}
                                          onFocus={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchCancel={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          type="button"
                                        >
                                          <Icon
                                            color="var(--mds-color-theme-common-text-primary-normal)"
                                            name="cancel"
                                            scale={20}
                                            weight="light"
                                          />
                                        </button>
                                      </FocusRing>
                                    </FocusRing>
                                  </ButtonSimple>
                                  <Portal
                                    containerInfo={
                                      <div
                                        data-tippy-root=""
                                        id="tippy-1"
                                        style="pointer-events: none; z-index: 9999;"
                                      >
                                        
                                      </div>
                                    }
                                  />
                                </Tippy>
                              </ForwardRef(TippyWrapper)>
                            </LazyTippy>
                          </Popover>
                          <div
                            className="md-tooltip-label"
                            id="test-ID"
                          >
                            Exit
                          </div>
                        </Tooltip>
                      </div>
                    </div>
                    <div
                      className="md-lightbox__body"
                      role="tablist"
                    >
                      <div
                        className="md-lightbox__content"
                      >
                        <div
                          className="md-lightbox__viewport md-lightbox__viewport--decrypting"
                        >
                          <Spinner
                            className="md-lightbox__decrypting-spinner"
                            color="black"
                            percentage={null}
                            showCheck={false}
                            showPercentage={false}
                            size={36}
                          >
                            <i
                              className="md-spinner md-spinner--36 md-spinner--black md-lightbox__decrypting-spinner"
                            />
                          </Spinner>
                          <div
                            className="md-lightbox__viewport-wrapper"
                            style={
                              {
                                "height": "100px",
                                "width": "100px",
                              }
                            }
                          >
                            <img
                              alt="test"
                              className="md-lightbox__viewport-image"
                              draggable="false"
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onDragStart={[Function]}
                              onKeyPress={[Function]}
                              src="testImage"
                            />
                          </div>
                        </div>
                        <div
                          className="md-lightbox__viewer-controls"
                          onClick={[Function]}
                          onKeyPress={[Function]}
                          role="group"
                        >
                          <div
                            className="md-lightbox__controls"
                            style={{}}
                          >
                            <Tooltip
                              placement="top"
                              triggerComponent={
                                <ButtonSimple
                                  className="md-lightbox__control"
                                  data-test="zoom-out-button"
                                  onPress={[Function]}
                                >
                                  <Icon
                                    color="var(--mds-color-theme-common-text-primary-normal)"
                                    name="zoom-out"
                                    scale={20}
                                    weight="light"
                                  />
                                </ButtonSimple>
                              }
                              type="label"
                            >
                              <Popover
                                addBackdrop={false}
                                aria-hidden={false}
                                boundary="scrollParent"
                                color="primary"
                                interactive={false}
                                offsetDistance={5}
                                offsetSkidding={0}
                                placement="top"
                                role="tooltip"
                                setInstance={[Function]}
                                showArrow={true}
                                strategy="absolute"
                                trigger="mouseenter focus"
                                triggerComponent={
                                  <ButtonSimple
                                    aria-labelledby="test-ID"
                                    className="md-lightbox__control"
                                    data-test="zoom-out-button"
                                    onPress={[Function]}
                                  >
                                    <Icon
                                      color="var(--mds-color-theme-common-text-primary-normal)"
                                      name="zoom-out"
                                      scale={20}
                                      weight="light"
                                    />
                                  </ButtonSimple>
                                }
                                variant="small"
                              >
                                <LazyTippy
                                  animation={false}
                                  appendTo="parent"
                                  hideOnClick={true}
                                  interactive={false}
                                  offset={
                                    [
                                      0,
                                      17,
                                    ]
                                  }
                                  onHidden={[Function]}
                                  placement="top"
                                  plugins={
                                    [
                                      {
                                        "defaultValue": true,
                                        "fn": [Function],
                                        "name": "hideOnEsc",
                                      },
                                    ]
                                  }
                                  popperOptions={
                                    {
                                      "modifiers": [
                                        {
                                          "enabled": true,
                                          "name": "arrow",
                                          "options": {
                                            "element": "#arrowtest-ID",
                                            "padding": 5,
                                          },
                                        },
                                        {
                                          "name": "preventOverflow",
                                          "options": {
                                            "altAxis": true,
                                            "boundariesElement": "scrollParent",
                                            "padding": 8,
                                          },
                                        },
                                      ],
                                      "strategy": "absolute",
                                    }
                                  }
                                  render={[Function]}
                                  setInstance={[Function]}
                                  trigger="mouseenter focus"
                                >
                                  <ForwardRef(TippyWrapper)
                                    animation={false}
                                    appendTo="parent"
                                    hideOnClick={true}
                                    interactive={false}
                                    offset={
                                      [
                                        0,
                                        17,
                                      ]
                                    }
                                    onHidden={[Function]}
                                    placement="top"
                                    plugins={
                                      [
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "defaultValue": true,
                                          "fn": [Function],
                                          "name": "hideOnEsc",
                                        },
                                      ]
                                    }
                                    popperOptions={
                                      {
                                        "modifiers": [
                                          {
                                            "enabled": true,
                                            "name": "arrow",
                                            "options": {
                                              "element": "#arrowtest-ID",
                                              "padding": 5,
                                            },
                                          },
                                          {
                                            "name": "preventOverflow",
                                            "options": {
                                              "altAxis": true,
                                              "boundariesElement": "scrollParent",
                                              "padding": 8,
                                            },
                                          },
                                        ],
                                        "strategy": "absolute",
                                      }
                                    }
                                    render={[Function]}
                                    trigger="mouseenter focus"
                                  >
                                    <Tippy
                                      animation={false}
                                      appendTo="parent"
                                      hideOnClick={true}
                                      interactive={false}
                                      offset={
                                        [
                                          0,
                                          17,
                                        ]
                                      }
                                      onHidden={[Function]}
                                      placement="top"
                                      plugins={
                                        [
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "defaultValue": true,
                                            "fn": [Function],
                                            "name": "hideOnEsc",
                                          },
                                        ]
                                      }
                                      popperOptions={
                                        {
                                          "modifiers": [
                                            {
                                              "enabled": true,
                                              "name": "arrow",
                                              "options": {
                                                "element": "#arrowtest-ID",
                                                "padding": 5,
                                              },
                                            },
                                            {
                                              "name": "preventOverflow",
                                              "options": {
                                                "altAxis": true,
                                                "boundariesElement": "scrollParent",
                                                "padding": 8,
                                              },
                                            },
                                          ],
                                          "strategy": "absolute",
                                        }
                                      }
                                      render={[Function]}
                                      trigger="mouseenter focus"
                                    >
                                      <ButtonSimple
                                        aria-labelledby="test-ID"
                                        className="md-lightbox__control"
                                        data-test="zoom-out-button"
                                        onPress={[Function]}
                                        useNativeKeyDown={true}
                                      >
                                        <FocusRing>
                                          <FocusRing
                                            focusClass="md-focus-ring-wrapper children"
                                            focusRingClass="md-focus-ring-wrapper children"
                                          >
                                            <button
                                              aria-labelledby="test-ID"
                                              className="md-lightbox__control md-button-simple-wrapper"
                                              data-test="zoom-out-button"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragStart={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchCancel={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                color="var(--mds-color-theme-common-text-primary-normal)"
                                                name="zoom-out"
                                                scale={20}
                                                weight="light"
                                              />
                                            </button>
                                          </FocusRing>
                                        </FocusRing>
                                      </ButtonSimple>
                                      <Portal
                                        containerInfo={
                                          <div
                                            data-tippy-root=""
                                            id="tippy-2"
                                            style="pointer-events: none; z-index: 9999;"
                                          >
                                            
                                          </div>
                                        }
                                      />
                                    </Tippy>
                                  </ForwardRef(TippyWrapper)>
                                </LazyTippy>
                              </Popover>
                              <div
                                className="md-tooltip-label"
                                id="test-ID"
                              >
                                Zoom out
                              </div>
                            </Tooltip>
                            <span
                              className="md-lightbox__control-value md-lightbox__control-zoom-level"
                            >
                              100%
                            </span>
                            <Tooltip
                              placement="top"
                              triggerComponent={
                                <ButtonSimple
                                  className="md-lightbox__control"
                                  data-test="zoom-in-button"
                                  onPress={[Function]}
                                >
                                  <Icon
                                    color="var(--mds-color-theme-common-text-primary-normal)"
                                    name="zoom-in"
                                    scale={20}
                                    weight="light"
                                  />
                                </ButtonSimple>
                              }
                              type="label"
                            >
                              <Popover
                                addBackdrop={false}
                                aria-hidden={false}
                                boundary="scrollParent"
                                color="primary"
                                interactive={false}
                                offsetDistance={5}
                                offsetSkidding={0}
                                placement="top"
                                role="tooltip"
                                setInstance={[Function]}
                                showArrow={true}
                                strategy="absolute"
                                trigger="mouseenter focus"
                                triggerComponent={
                                  <ButtonSimple
                                    aria-labelledby="test-ID"
                                    className="md-lightbox__control"
                                    data-test="zoom-in-button"
                                    onPress={[Function]}
                                  >
                                    <Icon
                                      color="var(--mds-color-theme-common-text-primary-normal)"
                                      name="zoom-in"
                                      scale={20}
                                      weight="light"
                                    />
                                  </ButtonSimple>
                                }
                                variant="small"
                              >
                                <LazyTippy
                                  animation={false}
                                  appendTo="parent"
                                  hideOnClick={true}
                                  interactive={false}
                                  offset={
                                    [
                                      0,
                                      17,
                                    ]
                                  }
                                  onHidden={[Function]}
                                  placement="top"
                                  plugins={
                                    [
                                      {
                                        "defaultValue": true,
                                        "fn": [Function],
                                        "name": "hideOnEsc",
                                      },
                                    ]
                                  }
                                  popperOptions={
                                    {
                                      "modifiers": [
                                        {
                                          "enabled": true,
                                          "name": "arrow",
                                          "options": {
                                            "element": "#arrowtest-ID",
                                            "padding": 5,
                                          },
                                        },
                                        {
                                          "name": "preventOverflow",
                                          "options": {
                                            "altAxis": true,
                                            "boundariesElement": "scrollParent",
                                            "padding": 8,
                                          },
                                        },
                                      ],
                                      "strategy": "absolute",
                                    }
                                  }
                                  render={[Function]}
                                  setInstance={[Function]}
                                  trigger="mouseenter focus"
                                >
                                  <ForwardRef(TippyWrapper)
                                    animation={false}
                                    appendTo="parent"
                                    hideOnClick={true}
                                    interactive={false}
                                    offset={
                                      [
                                        0,
                                        17,
                                      ]
                                    }
                                    onHidden={[Function]}
                                    placement="top"
                                    plugins={
                                      [
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "defaultValue": true,
                                          "fn": [Function],
                                          "name": "hideOnEsc",
                                        },
                                      ]
                                    }
                                    popperOptions={
                                      {
                                        "modifiers": [
                                          {
                                            "enabled": true,
                                            "name": "arrow",
                                            "options": {
                                              "element": "#arrowtest-ID",
                                              "padding": 5,
                                            },
                                          },
                                          {
                                            "name": "preventOverflow",
                                            "options": {
                                              "altAxis": true,
                                              "boundariesElement": "scrollParent",
                                              "padding": 8,
                                            },
                                          },
                                        ],
                                        "strategy": "absolute",
                                      }
                                    }
                                    render={[Function]}
                                    trigger="mouseenter focus"
                                  >
                                    <Tippy
                                      animation={false}
                                      appendTo="parent"
                                      hideOnClick={true}
                                      interactive={false}
                                      offset={
                                        [
                                          0,
                                          17,
                                        ]
                                      }
                                      onHidden={[Function]}
                                      placement="top"
                                      plugins={
                                        [
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "fn": [Function],
                                          },
                                          {
                                            "defaultValue": true,
                                            "fn": [Function],
                                            "name": "hideOnEsc",
                                          },
                                        ]
                                      }
                                      popperOptions={
                                        {
                                          "modifiers": [
                                            {
                                              "enabled": true,
                                              "name": "arrow",
                                              "options": {
                                                "element": "#arrowtest-ID",
                                                "padding": 5,
                                              },
                                            },
                                            {
                                              "name": "preventOverflow",
                                              "options": {
                                                "altAxis": true,
                                                "boundariesElement": "scrollParent",
                                                "padding": 8,
                                              },
                                            },
                                          ],
                                          "strategy": "absolute",
                                        }
                                      }
                                      render={[Function]}
                                      trigger="mouseenter focus"
                                    >
                                      <ButtonSimple
                                        aria-labelledby="test-ID"
                                        className="md-lightbox__control"
                                        data-test="zoom-in-button"
                                        onPress={[Function]}
                                        useNativeKeyDown={true}
                                      >
                                        <FocusRing>
                                          <FocusRing
                                            focusClass="md-focus-ring-wrapper children"
                                            focusRingClass="md-focus-ring-wrapper children"
                                          >
                                            <button
                                              aria-labelledby="test-ID"
                                              className="md-lightbox__control md-button-simple-wrapper"
                                              data-test="zoom-in-button"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragStart={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchCancel={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                color="var(--mds-color-theme-common-text-primary-normal)"
                                                name="zoom-in"
                                                scale={20}
                                                weight="light"
                                              />
                                            </button>
                                          </FocusRing>
                                        </FocusRing>
                                      </ButtonSimple>
                                      <Portal
                                        containerInfo={
                                          <div
                                            data-tippy-root=""
                                            id="tippy-3"
                                            style="pointer-events: none; z-index: 9999;"
                                          >
                                            
                                          </div>
                                        }
                                      />
                                    </Tippy>
                                  </ForwardRef(TippyWrapper)>
                                </LazyTippy>
                              </Popover>
                              <div
                                className="md-tooltip-label"
                                id="test-ID"
                              >
                                Zoom in
                              </div>
                            </Tooltip>
                          </div>
                          <div
                            className="md-lightbox__controls"
                          >
                            <span
                              className="md-lightbox__control-value"
                            >
                              1
                            </span>
                          </div>
                          <Tooltip
                            placement="top"
                            triggerComponent={
                              <ButtonSimple
                                className="md-lightbox__control md-lightbox__control-download"
                                onPress={[Function]}
                              >
                                <Icon
                                  color="var(--mds-color-theme-common-text-primary-normal)"
                                  name="download"
                                  scale={20}
                                  weight="light"
                                />
                              </ButtonSimple>
                            }
                            type="label"
                          >
                            <Popover
                              addBackdrop={false}
                              aria-hidden={false}
                              boundary="scrollParent"
                              color="primary"
                              interactive={false}
                              offsetDistance={5}
                              offsetSkidding={0}
                              placement="top"
                              role="tooltip"
                              setInstance={[Function]}
                              showArrow={true}
                              strategy="absolute"
                              trigger="mouseenter focus"
                              triggerComponent={
                                <ButtonSimple
                                  aria-labelledby="test-ID"
                                  className="md-lightbox__control md-lightbox__control-download"
                                  onPress={[Function]}
                                >
                                  <Icon
                                    color="var(--mds-color-theme-common-text-primary-normal)"
                                    name="download"
                                    scale={20}
                                    weight="light"
                                  />
                                </ButtonSimple>
                              }
                              variant="small"
                            >
                              <LazyTippy
                                animation={false}
                                appendTo="parent"
                                hideOnClick={true}
                                interactive={false}
                                offset={
                                  [
                                    0,
                                    17,
                                  ]
                                }
                                onHidden={[Function]}
                                placement="top"
                                plugins={
                                  [
                                    {
                                      "defaultValue": true,
                                      "fn": [Function],
                                      "name": "hideOnEsc",
                                    },
                                  ]
                                }
                                popperOptions={
                                  {
                                    "modifiers": [
                                      {
                                        "enabled": true,
                                        "name": "arrow",
                                        "options": {
                                          "element": "#arrowtest-ID",
                                          "padding": 5,
                                        },
                                      },
                                      {
                                        "name": "preventOverflow",
                                        "options": {
                                          "altAxis": true,
                                          "boundariesElement": "scrollParent",
                                          "padding": 8,
                                        },
                                      },
                                    ],
                                    "strategy": "absolute",
                                  }
                                }
                                render={[Function]}
                                setInstance={[Function]}
                                trigger="mouseenter focus"
                              >
                                <ForwardRef(TippyWrapper)
                                  animation={false}
                                  appendTo="parent"
                                  hideOnClick={true}
                                  interactive={false}
                                  offset={
                                    [
                                      0,
                                      17,
                                    ]
                                  }
                                  onHidden={[Function]}
                                  placement="top"
                                  plugins={
                                    [
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "fn": [Function],
                                      },
                                      {
                                        "defaultValue": true,
                                        "fn": [Function],
                                        "name": "hideOnEsc",
                                      },
                                    ]
                                  }
                                  popperOptions={
                                    {
                                      "modifiers": [
                                        {
                                          "enabled": true,
                                          "name": "arrow",
                                          "options": {
                                            "element": "#arrowtest-ID",
                                            "padding": 5,
                                          },
                                        },
                                        {
                                          "name": "preventOverflow",
                                          "options": {
                                            "altAxis": true,
                                            "boundariesElement": "scrollParent",
                                            "padding": 8,
                                          },
                                        },
                                      ],
                                      "strategy": "absolute",
                                    }
                                  }
                                  render={[Function]}
                                  trigger="mouseenter focus"
                                >
                                  <Tippy
                                    animation={false}
                                    appendTo="parent"
                                    hideOnClick={true}
                                    interactive={false}
                                    offset={
                                      [
                                        0,
                                        17,
                                      ]
                                    }
                                    onHidden={[Function]}
                                    placement="top"
                                    plugins={
                                      [
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "fn": [Function],
                                        },
                                        {
                                          "defaultValue": true,
                                          "fn": [Function],
                                          "name": "hideOnEsc",
                                        },
                                      ]
                                    }
                                    popperOptions={
                                      {
                                        "modifiers": [
                                          {
                                            "enabled": true,
                                            "name": "arrow",
                                            "options": {
                                              "element": "#arrowtest-ID",
                                              "padding": 5,
                                            },
                                          },
                                          {
                                            "name": "preventOverflow",
                                            "options": {
                                              "altAxis": true,
                                              "boundariesElement": "scrollParent",
                                              "padding": 8,
                                            },
                                          },
                                        ],
                                        "strategy": "absolute",
                                      }
                                    }
                                    render={[Function]}
                                    trigger="mouseenter focus"
                                  >
                                    <ButtonSimple
                                      aria-labelledby="test-ID"
                                      className="md-lightbox__control md-lightbox__control-download"
                                      onPress={[Function]}
                                      useNativeKeyDown={true}
                                    >
                                      <FocusRing>
                                        <FocusRing
                                          focusClass="md-focus-ring-wrapper children"
                                          focusRingClass="md-focus-ring-wrapper children"
                                        >
                                          <button
                                            aria-labelledby="test-ID"
                                            className="md-lightbox__control md-lightbox__control-download md-button-simple-wrapper"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragStart={[Function]}
                                            onFocus={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchCancel={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            type="button"
                                          >
                                            <Icon
                                              color="var(--mds-color-theme-common-text-primary-normal)"
                                              name="download"
                                              scale={20}
                                              weight="light"
                                            />
                                          </button>
                                        </FocusRing>
                                      </FocusRing>
                                    </ButtonSimple>
                                    <Portal
                                      containerInfo={
                                        <div
                                          data-tippy-root=""
                                          id="tippy-4"
                                          style="pointer-events: none; z-index: 9999;"
                                        >
                                          
                                        </div>
                                      }
                                    />
                                  </Tippy>
                                </ForwardRef(TippyWrapper)>
                              </LazyTippy>
                            </Popover>
                            <div
                              className="md-tooltip-label"
                              id="test-ID"
                            >
                              Download
                            </div>
                          </Tooltip>
                        </div>
                      </div>
                    </div>
                  </div>
                </ThemeProvider>
              </div>
            </div>
          </div>
        </FocusTrap>
      </Modal>
    </Portal>
  </Displaced>
</Lightbox>
`;
